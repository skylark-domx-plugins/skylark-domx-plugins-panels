{"version":3,"sources":["skylark-domx-panels.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","panels","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","attach","plugins","Collapse","Plugin","inherit","klassName","pluginName","options","toggle","_construct","elm","this","overrided","$element","transitioning","dimension","hasWidth","hasClass","show","startEvent","create","trigger","isDefaultPrevented","removeClass","addClass","attr","complete","support","transition","call","scrollSize","camelCase","join","one","proxy","emulateTransitionEnd","TRANSITION_DURATION","hide","offsetHeight","register","Panel","toggler","selector","body","_velm","elmx","_expanded","$toggle","find","$body","on","expand","emit","plugin","collapse","full","unfull","toogleFull","close","Accordion","panel","template","forEach","panelEl","accordion","push","_panels","_post","_refresh","updates","get","addPanel","remove","expandAll","collapseAll","active","Pagination","tagName","css","selectors","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","state","Number","$first","$prev","$last","$next","$numeric","self","checkCanAction","$elm","is","click","ret","numeric","pageNo","parseInt","_currentPage","_totalPages","totalPageNoBtns","Math","min","begin","end","count","size","visibles","i","filter","$btn","eq","changePageNoBtns","changeLabeldBtns","v","undefined","Tab","element","target","preventDefault","$this","$ul","closest","data","replace","parent","$previous","hideEvent","relatedTarget","showEvent","$target","activate","type","container","callback","$active","length","next","offsetWidth","Dropdown","TabStrip","header","tab","content","tabpane","droptabs","dropdown","dropdownMenu","dropdownTabs","dropdownCaret","visibleTabs","auto","pullDropdownRight","$header","$tabs","$content","$tabpanes","prototype","each","idx","tabEl","arrange","dropdownTabsSelector","visibleTabsSelector","$container","dropdownLabel","clone","$dropdownTabs","$visibleTabs","tempElem","hiddenElementWidth","availableSpace","outerWidth","visibleTabsWidth","index","x","reverse","prependTo","first","appendTo","detach","insertAfter","add","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","separator","toolbarHeight","_this","opts","wrapper","_elm","list","document","width","editor","editable","util","reflow","os","mobile","position","left","offset","outerHeight","placeholderEl","addToolItem","itemWidget","addSeparator","main"],"mappings":"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","file":"../skylark-domx-panels.js","sourcesContent":["define('skylark-domx-panels/panels',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar panels = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(panels, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn skylark.attach(\"domx.panels\",panels);\r\n\r\n});\r\n\ndefine('skylark-domx-panels/Collapse',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./panels\"\n], function(langx, browser, eventer,  $, plugins, panels) {\n\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse =  plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"domx.collapse\",\n\n    options : {\n      toggle: true\n    },\n\n    _construct : function(elm,options) {\n      ////options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(elm,options);\n      this.$element      = this.$();\n      //this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + elm.id + '\"],' +\n      //                     '[data-toggle=\"collapse\"][data-target=\"#' + elm.id + '\"]')\n      this.transitioning = null\n\n      //if (this.options.parent) {\n      //  this.$parent = this.getParent()\n      //} else {\n      //  this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      //}\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width');\n      return hasWidth ? 'width' : 'height';\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) {\n        return;\n      }\n\n      //var activesData;\n      //var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      //if (actives && actives.length) {\n      //  activesData = actives.data('collapse')\n      //  if (activesData && activesData.transitioning) return\n      //}\n\n      var startEvent = eventer.create('show.collapse');\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      //if (actives && actives.length) {\n      //  //Plugin.call(actives, 'hide')\n      //  actives.plugin(\"domx.collapse\").hide();\n      //  activesData || actives.data('collapse', null)\n      //}\n\n      var dimension = this.dimension();\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      //this.$trigger\n      //  .removeClass('collapsed')\n      //  .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.collapse')\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'));\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) {\n        return ;\n      }\n\n      var startEvent = eventer.create('hide.collapse');\n      this.$element.trigger(startEvent);\n      if (startEvent.isDefaultPrevented()) {\n        return ;\n      } \n\n      var dimension = this.dimension();\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false);\n\n      //this.$trigger\n      //  .addClass('collapsed')\n      //  .attr('aria-expanded', false);\n\n      this.transitioning = 1;\n\n      var complete = function () {\n        this.transitioning = 0;\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.collapse');\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']();\n    }\n\n    /*\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in');\n\n      $element.attr('aria-expanded', isOpen);\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen);\n    }\n    */\n  });\n\n  Collapse.TRANSITION_DURATION = 350;\n\n  /*\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n  */\n\n  plugins.register(Collapse);\n\n  return Collapse;\n\n});\n\ndefine('skylark-domx-panels/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Collapse\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Collapse){\r\n\r\n  var Panel = plugins.Plugin.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"domx.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      this._expanded = false;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.panel',(e) => {\r\n        this.toggle();\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.emit(\"expanding\");\r\n      this.$body.plugin(\"domx.collapse\").show();\r\n      this._expanded = true;\r\n      this.emit(\"expanded\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.emit(\"collapsing\");\r\n      this.$body.plugin(\"domx.collapse\").hide();\r\n      this._expanded = false;\r\n      this.emit(\"collapsed\");\r\n    },\r\n\r\n    toggle : function() {\r\n      // toggle this panel\r\n      if (this._expanded) {\r\n        this.collapse();\r\n      } else {\r\n        this.expand();\r\n      }\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n    }\r\n\r\n\r\n  });\r\n\r\n  plugins.register(Panel);\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-domx-panels/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Collapse\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Collapse,Panel){\r\n\r\n  var Accordion = plugins.Plugin.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"domx.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n     _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\r\n        var panel = new Accordion.Panel(panelEl,{\r\n          accordion : this\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    expand : function() {\r\n      if (this.options.accordion.active) {\r\n        this.options.accordion.active.collapse();\r\n      }\r\n      this.overrided();\r\n      this.options.accordion.active = this;\r\n    },\r\n\r\n    collapse : function() {\r\n      this.overrided();\r\n      this.options.accordion.active = null;\r\n    },\r\n\r\n    toggle : function() {\r\n      this.overrided();\r\n    },\r\n\r\n    remove : function() {\r\n      this.overrided();\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Accordion);\r\n\r\n  return panels.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-domx-panels/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\r\n\r\n  'use strict';\r\n\r\n  var Pagination = plugins.Plugin.inherit({\r\n      klassName : \"Pagination\",\r\n\r\n      pluginName : \"domx.pagination\",\r\n\r\n      options : {\r\n          tagName : \"ul\",\r\n          css : \"\",\r\n          selectors : {\r\n              firstNavi : \"li[aria-label='first']\",\r\n              prevNavi : \"li[aria-label='prev']\",\r\n              nextNavi : \"li[aria-label='next']\",\r\n              lastNavi : \"li[aria-label='last']\",\r\n              numericNavi : \"li:not([aria-label])\",\r\n              numericTxt  : \"a\"\r\n          },\r\n          totalPages: 7,\r\n          maxButtonsVisible: 5,\r\n          currentPage: 1     \r\n      },\r\n\r\n      state : {\r\n          totalPages : Number,\r\n          currentPage : Number\r\n      },\r\n\r\n      _construct : function(elm,options) {\r\n        this.overrided(elm,options);\r\n        this._velm = this.elmx();\r\n\r\n        this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n        this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n        this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n        this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n        this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n        var self = this;\r\n\r\n        function checkCanAction(elm) {\r\n          var $elm = $(elm);\r\n          if ($elm.is(\".disabled,.active\")) {\r\n            return false;\r\n          } else {\r\n            return $elm;\r\n          }\r\n        }\r\n\r\n        this.$first.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(1);\r\n        });\r\n\r\n        this.$prev.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.currentPage()-1);\r\n        });\r\n\r\n        this.$last.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.totalPages());\r\n        });\r\n\r\n        this.$next.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.currentPage()+1);\r\n        });\r\n\r\n        this.$numeric.click(function(){\r\n          var ret = checkCanAction(this)\r\n          if (!ret) {\r\n            return;\r\n          }\r\n          var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n              pageNo = parseInt(numeric);\r\n          self.currentPage(pageNo);\r\n\r\n        });\r\n\r\n        this._currentPage = this.options.currentPage;\r\n        this._totalPages = this.options.totalPages;\r\n\r\n        this._refresh({\r\n          currentPage : true,\r\n          totalPages : true\r\n        });\r\n      },\r\n\r\n      _refresh: function (updates) {\r\n        var self = this;\r\n\r\n        function changePageNoBtns(currentPage,totalPages) {\r\n\r\n          // Create the numeric buttons.\r\n          // Variable of number control in the buttons.\r\n          var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n          var begin = 1;\r\n          var end = begin + totalPageNoBtns - 1;\r\n\r\n          /*\r\n           * Align the values in the begin and end variables if the user has the\r\n           * possibility that select a page that doens't appear in the paginador.\r\n           * e.g currentPage = 1, and user go to the 20 page.\r\n           */\r\n          while ((currentPage < begin) || (currentPage > end)) {\r\n            if (currentPage > end) {\r\n               begin += totalPageNoBtns;\r\n               end += totalPageNoBtns;\r\n\r\n               if (end > totalPages) {\r\n                 begin = begin - (end - totalPages);\r\n                 end = totalPages;\r\n               }\r\n             } else {\r\n               begin -= totalPageNoBtns;\r\n               end -= totalPageNoBtns;\r\n\r\n               if (begin < 0) {\r\n                 end = end + (begin + totalPageNoBtns);\r\n                 begin = 1;\r\n               }\r\n             }\r\n          }\r\n         /*\r\n          * Verify if the user clicks in the last page show by paginator.\r\n          * If yes, the paginator advances.\r\n          */\r\n          if ((currentPage === end) && (totalPages != 1)) {\r\n            begin = currentPage - 1;\r\n            end = begin + totalPageNoBtns - 1;\r\n\r\n            if (end >= totalPages) {\r\n              begin = begin - (end - (totalPages));\r\n              end = totalPages;\r\n            }\r\n          }\r\n\r\n          /*\r\n           * Verify it the user clicks in the first page show by paginator.\r\n           * If yes, the paginator retrogress\r\n           */\r\n           if ((begin === currentPage) && (totalPages != 1)) {\r\n             if (currentPage != 1) {\r\n               end = currentPage + 1;\r\n               begin = end - (totalPageNoBtns - 1);\r\n             }\r\n           }\r\n\r\n           var count = self.$numeric.size(),\r\n               visibles = end-begin + 1,\r\n               i = 0;\r\n\r\n           self.$numeric.filter(\".active\").removeClass(\"active\");\r\n           while (i<visibles) {\r\n             var pageNo = i + begin,\r\n                 $btn = self.$numeric.eq(i);\r\n             $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n             if (pageNo == currentPage) {\r\n              $btn.addClass(\"active\");\r\n             }\r\n             i++;\r\n           }\r\n           while (i<count) {\r\n             self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n             i++;\r\n           }\r\n\r\n\r\n        }\r\n\r\n        function changeLabeldBtns(currentPage,totalPages) {\r\n          if (currentPage < 1) {\r\n            throw('Page can\\'t be less than 1');\r\n          } else if (currentPage > totalPages) {\r\n            throw('Page is bigger than total pages');\r\n          }\r\n\r\n          if (totalPages < 1) {\r\n            throw('Total Pages can\\'t be less than 1');\r\n          }\r\n\r\n          if (currentPage == 1 ) {\r\n            self.$first.addClass(\"disabled\");\r\n            self.$prev.addClass(\"disabled\");\r\n          } else {\r\n            self.$first.removeClass(\"disabled\");\r\n            self.$prev.removeClass(\"disabled\");\r\n          }\r\n\r\n          if (currentPage == totalPages ) {\r\n            self.$last.addClass(\"disabled\");\r\n            self.$next.addClass(\"disabled\");\r\n          } else {\r\n            self.$last.removeClass(\"disabled\");\r\n            self.$next.removeClass(\"disabled\");\r\n          }\r\n        }\r\n\r\n        if (updates.currentPage || updates.totalPages) {\r\n          var currentPage = self.currentPage(),\r\n              totalPages = self.totalPages();\r\n\r\n          changePageNoBtns(currentPage,totalPages);\r\n          changeLabeldBtns(currentPage,totalPages);\r\n        }\r\n\r\n      },\r\n\r\n      currentPage : function(v) {\r\n        if (v !== undefined) {\r\n          this._currentPage = v;\r\n          this._refresh({\r\n            currentPage : true\r\n          });            \r\n          return this;\r\n        } else {\r\n          return this._currentPage;\r\n        }\r\n      },\r\n\r\n      totalPages : function(v) {\r\n        if (v !== undefined) {\r\n          this._totalPages = v;\r\n          this._refresh({\r\n            totalPages : true\r\n          });\r\n          return this;\r\n        } else {\r\n          return this._totalPages;\r\n        }\r\n      }\r\n  });\r\n\r\n  plugins.register(Pagination);\r\n\r\n\r\n  return panels.Pagination = Pagination;\r\n});\ndefine('skylark-domx-panels/Tab',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./panels\"\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab =  plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"domx.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.bs.tab.data-api\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.TRANSITION_DURATION = 150\n\n\n  plugins.register(Tab);\n\n  return panels.Tab = Tab;\n});\n\ndefine('skylark-domx-panels/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins\",\r\n    \"skylark-domx-popups/Dropdown\",\r\n    \"./panels\",\r\n    \"./Tab\"\r\n], function(langx, browser, eventer, noder, geom,  $, plugins,Dropdown,panels, Tab) {\r\n\r\n    var TabStrip = plugins.Plugin.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"domx.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          },\r\n\r\n          droptabs : {\r\n            selectors : {\r\n              dropdown : \"li.droptabs\",\r\n              dropdownMenu    : \"ul.dropdown-menu\",\r\n              dropdownTabs    : \"li\",\r\n              dropdownCaret   : \"b.caret\",\r\n              visibleTabs     : \">li:not(.dropdown)\",\r\n            },\r\n            auto              : true,\r\n            pullDropdownRight : true,\r\n\r\n\r\n          }\r\n        },\r\n\r\n     _construct : function(elm,options) {\r\n          this.overrided(elm,options);\r\n          this._velm = this.elmx();\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').plugin(Dropdown.prototype.pluginName);\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).plugin(Tab.prototype.pluginName, {\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        arrange : function () {\r\n\r\n          var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\r\n              visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\r\n\r\n              $container = this.$header;\r\n          var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\r\n          var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\r\n          var dropdownLabel = $('>a', dropdown).clone();\r\n          var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\r\n\r\n          // We only want the default label, strip the caret out\r\n          $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\r\n\r\n          if (this.options.droptabs.pullDropdownRight) {\r\n            $(dropdown).addClass('pull-right');\r\n          }\r\n\r\n          var $dropdownTabs = function () {\r\n            return $(dropdownTabsSelector, dropdownMenu);\r\n          }\r\n\r\n          var $visibleTabs = function () {\r\n            return $(visibleTabsSelector, $container);\r\n          }\r\n\r\n          function getFirstHiddenElementWidth() {\r\n            var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getHiddenElementWidth(elem) {\r\n            var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getDropdownLabel() {\r\n            var labelText = 'Dropdown';\r\n            if ($(dropdown).hasClass('active')) {\r\n              labelText = $('>li.active>a', dropdownMenu).html();\r\n            } else if (dropdownLabel.html().length > 0) {\r\n              labelText = dropdownLabel.html();\r\n            }\r\n\r\n            labelText = $.trim(labelText);\r\n\r\n            if (labelText.length > 10) {\r\n              labelText = labelText.substring(0, 10) + '...';\r\n            }\r\n\r\n            return labelText;\r\n          }\r\n\r\n          function renderDropdownLabel() {\r\n            $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\r\n          }\r\n\r\n          function manageActive(elem) {\r\n            //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\r\n            $('a', $(elem)).on('show.bs.tab', function (e) {\r\n              $(e.relatedTarget).parent().removeClass('active');\r\n            })\r\n            $('a', $(elem)).on('shown.bs.tab', function (e) {\r\n              renderDropdownLabel();\r\n            })\r\n\r\n          }\r\n\r\n          function checkDropdownSelection() {\r\n            if ($($dropdownTabs()).filter('.active').length > 0) {\r\n              $(dropdown).addClass('active');\r\n            } else {\r\n              $(dropdown).removeClass('active');\r\n            }\r\n\r\n            renderDropdownLabel();\r\n          }\r\n\r\n\r\n          var visibleTabsWidth = function () {\r\n            var visibleTabsWidth = 0;\r\n            $($visibleTabs()).each(function( index ) {\r\n              visibleTabsWidth += parseInt($(this).outerWidth(), 10);\r\n            });\r\n            visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\r\n            return visibleTabsWidth;\r\n          }\r\n\r\n          var availableSpace = function () {\r\n            return $container.outerWidth()-visibleTabsWidth();\r\n          }\r\n\r\n          if (availableSpace()<0) {//we will hide tabs here\r\n            var x = availableSpace();\r\n            $($visibleTabs().get().reverse()).each(function( index ){\r\n              if (!($(this).hasClass('always-visible'))){\r\n                  $(this).prependTo(dropdownMenu);\r\n                  x=x+$(this).outerWidth();\r\n              }\r\n              if (x>=0) {return false;}\r\n            });\r\n          }\r\n\r\n          if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\r\n            var x = availableSpace();\r\n            $($dropdownTabs()).each(function( index ){\r\n              if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\r\n                $(this).appendTo($container);\r\n                x = x-$(this).outerWidth();\r\n              } else {return false;}\r\n             });\r\n\r\n            if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\r\n              // If not pulling-right, keep the dropdown at the end of the container.\r\n              $(dropdown).detach().insertAfter($container.find('li:last-child'));\r\n            }\r\n          }\r\n\r\n          if ($dropdownTabs().length <= 0) {\r\n            dropdown.hide();\r\n          } else {\r\n            dropdown.show();\r\n          }\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    plugins.register(TabStrip);\r\n\r\n\r\n    return panels.TabStrip = TabStrip;\r\n\r\n});\ndefine('skylark-domx-panels/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,$,plugins,panels){ \r\n\r\n\r\n  var Toolbar = plugins.Plugin.inherit({\r\n    klassName : \"Toolbar\",\r\n\r\n    pluginName : \"domx.toolbar\",\r\n\r\n    options : {\r\n      toolbarFloat: true,\r\n      toolbarHidden: false,\r\n      toolbarFloatOffset: 0,\r\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\r\n      separator : {\r\n        template :  '<li><span class=\"separator\"></span></li>'\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      //this.editor = editor;\r\n\r\n      //this.opts = langx.extend({}, this.opts, opts);\r\n      this.opts = this.options;\r\n\r\n\r\n      //if (!langx.isArray(this.opts.toolbar)) {\r\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      //}\r\n\r\n      this.wrapper = $(this._elm);\r\n      this.list = this.wrapper.find('ul');\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.toolbar', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.editable.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n\r\n        /*\r\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        */\r\n      }\r\n\r\n      /*\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      */\r\n\r\n      \r\n    },\r\n\r\n    addToolItem : function(itemWidget) {\r\n      $(itemWidget._elm).appendTo(this.list);\r\n      return this;\r\n    },\r\n\r\n    addSeparator : function() {\r\n      $(this.options.separator.template).appendTo(this.list);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Toolbar);\r\n\r\n  return panels.Toolbar = Toolbar;\r\n\r\n});\ndefine('skylark-domx-panels/main',[\r\n    \"./panels\",\r\n    \"./Accordion\",\r\n    \"./Pagination\",\r\n    \"./TabStrip\",\r\n    \"./Toolbar\"\r\n], function(panels) {\r\n    return panels;\r\n});\ndefine('skylark-domx-panels', ['skylark-domx-panels/main'], function (main) { return main; });\n\n"]}