{"version":3,"sources":["skylark-domx-panels.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","panels","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","attach","plugins","Collapse","Plugin","inherit","klassName","pluginName","options","toggle","_construct","elm","this","overrided","$element","$trigger","id","transitioning","parent","$parent","getParent","addAriaAndCollapsedClass","dimension","hasWidth","hasClass","show","activesData","actives","children","length","data","startEvent","create","trigger","isDefaultPrevented","plugin","hide","removeClass","addClass","attr","complete","support","transition","call","scrollSize","camelCase","join","one","proxy","emulateTransitionEnd","TRANSITION_DURATION","offsetHeight","find","each","i","element","href","target","replace","end","isOpen","toggleClass","register","Panel","toggler","selector","body","_velm","elmx","_expanded","$toggle","$body","on","expand","emit","collapse","full","unfull","toogleFull","close","Accordion","panel","template","forEach","panelEl","accordion","push","_panels","_post","_refresh","updates","get","addPanel","remove","expandAll","collapseAll","active","Pagination","tagName","css","selectors","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","state","Number","$first","$prev","$last","$next","$numeric","self","checkCanAction","$elm","is","click","ret","numeric","pageNo","parseInt","_currentPage","_totalPages","totalPageNoBtns","Math","min","begin","count","size","visibles","filter","$btn","eq","changePageNoBtns","changeLabeldBtns","v","undefined","Tab","preventDefault","$this","$ul","closest","$previous","hideEvent","relatedTarget","showEvent","$target","activate","type","container","callback","$active","next","offsetWidth","Dropdown","TabStrip","header","tab","content","tabpane","droptabs","dropdown","dropdownMenu","dropdownTabs","dropdownCaret","visibleTabs","auto","pullDropdownRight","$header","$tabs","$content","$tabpanes","prototype","idx","tabEl","arrange","dropdownTabsSelector","visibleTabsSelector","$container","dropdownLabel","clone","$dropdownTabs","$visibleTabs","tempElem","hiddenElementWidth","availableSpace","outerWidth","visibleTabsWidth","index","x","reverse","prependTo","first","appendTo","detach","insertAfter","add","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","separator","toolbarHeight","_this","opts","wrapper","_elm","list","document","width","editor","editable","util","reflow","os","mobile","position","left","offset","outerHeight","placeholderEl","addToolItem","itemWidget","addSeparator","main"],"mappings":"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","file":"../skylark-domx-panels.js","sourcesContent":["define('skylark-domx-panels/panels',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar panels = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(panels, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn skylark.attach(\"domx.panels\",panels);\r\n\r\n});\r\n\ndefine('skylark-domx-panels/Collapse',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./panels\"\n], function(langx, browser, eventer,  $, plugins, panels) {\n\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse =  plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"domx.collapse\",\n\n    options : {\n      toggle: true\n    },\n\n    _construct : function(elm,options) {\n      //options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(elm,options);\n      this.$element      = this.$();\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + elm.id + '\"],' +\n                             '[data-toggle=\"collapse\"][data-target=\"#' + elm.id + '\"]')\n      this.transitioning = null\n\n      if (this.options.parent) {\n        this.$parent = this.getParent()\n      } else {\n        this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      }\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width');\n      return hasWidth ? 'width' : 'height';\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) {\n        return;\n      }\n\n      var activesData;\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      var startEvent = eventer.create('show.collapse');\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        //Plugin.call(actives, 'hide')\n        actives.plugin(\"domx.collapse\").hide();\n        activesData || actives.data('collapse', null)\n      }\n\n      var dimension = this.dimension();\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      this.$trigger\n        .removeClass('collapsed')\n        .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.collapse')\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'));\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) {\n        return ;\n      }\n\n      var startEvent = eventer.create('hide.collapse');\n      this.$element.trigger(startEvent);\n      if (startEvent.isDefaultPrevented()) {\n        return ;\n      } \n\n      var dimension = this.dimension();\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false);\n\n      this.$trigger\n        .addClass('collapsed')\n        .attr('aria-expanded', false);\n\n      this.transitioning = 1;\n\n      var complete = function () {\n        this.transitioning = 0;\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.collapse');\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']();\n    },\n\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in');\n\n      $element.attr('aria-expanded', isOpen);\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen);\n    }\n\n  });\n\n  Collapse.TRANSITION_DURATION = 350;\n\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  plugins.register(Collapse);\n\n  return Collapse;\n\n});\n\ndefine('skylark-domx-panels/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Collapse\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Collapse){\r\n\r\n  var Panel = plugins.Plugin.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"domx.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      this._expanded = false;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.panel',(e) => {\r\n        this.toggle();\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.emit(\"expanding\");\r\n      this.$body.plugin(\"domx.collapse\").show();\r\n      this._expanded = true;\r\n      this.emit(\"expanded\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.emit(\"collapsing\");\r\n      this.$body.plugin(\"domx.collapse\").hide();\r\n      this._expanded = false;\r\n      this.emit(\"collapsed\");\r\n    },\r\n\r\n    toggle : function() {\r\n      // toggle this panel\r\n      if (this._expanded) {\r\n        this.collapse();\r\n      } else {\r\n        this.expand();\r\n      }\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n    }\r\n\r\n\r\n  });\r\n\r\n  plugins.register(Panel);\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-domx-panels/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Collapse\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Collapse,Panel){\r\n\r\n  var Accordion = plugins.Plugin.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"domx.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n     _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\r\n        var panel = new Accordion.Panel(panelEl,{\r\n          accordion : this\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    expand : function() {\r\n      if (this.options.accordion.active) {\r\n        this.options.accordion.active.collapse();\r\n      }\r\n      this.overrided();\r\n      this.options.accordion.active = this;\r\n    },\r\n\r\n    collapse : function() {\r\n      this.overrided();\r\n      this.options.accordion.active = null;\r\n    },\r\n\r\n    toggle : function() {\r\n      this.overrided();\r\n    },\r\n\r\n    remove : function() {\r\n      this.overrided();\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Accordion);\r\n\r\n  return panels.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-domx-panels/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\r\n\r\n  'use strict';\r\n\r\n  var Pagination = plugins.Plugin.inherit({\r\n      klassName : \"Pagination\",\r\n\r\n      pluginName : \"domx.pagination\",\r\n\r\n      options : {\r\n          tagName : \"ul\",\r\n          css : \"\",\r\n          selectors : {\r\n              firstNavi : \"li[aria-label='first']\",\r\n              prevNavi : \"li[aria-label='prev']\",\r\n              nextNavi : \"li[aria-label='next']\",\r\n              lastNavi : \"li[aria-label='last']\",\r\n              numericNavi : \"li:not([aria-label])\",\r\n              numericTxt  : \"a\"\r\n          },\r\n          totalPages: 7,\r\n          maxButtonsVisible: 5,\r\n          currentPage: 1     \r\n      },\r\n\r\n      state : {\r\n          totalPages : Number,\r\n          currentPage : Number\r\n      },\r\n\r\n      _construct : function(elm,options) {\r\n        this.overrided(elm,options);\r\n        this._velm = this.elmx();\r\n\r\n        this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n        this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n        this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n        this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n        this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n        var self = this;\r\n\r\n        function checkCanAction(elm) {\r\n          var $elm = $(elm);\r\n          if ($elm.is(\".disabled,.active\")) {\r\n            return false;\r\n          } else {\r\n            return $elm;\r\n          }\r\n        }\r\n\r\n        this.$first.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(1);\r\n        });\r\n\r\n        this.$prev.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.currentPage()-1);\r\n        });\r\n\r\n        this.$last.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.totalPages());\r\n        });\r\n\r\n        this.$next.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.currentPage()+1);\r\n        });\r\n\r\n        this.$numeric.click(function(){\r\n          var ret = checkCanAction(this)\r\n          if (!ret) {\r\n            return;\r\n          }\r\n          var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n              pageNo = parseInt(numeric);\r\n          self.currentPage(pageNo);\r\n\r\n        });\r\n\r\n        this._currentPage = this.options.currentPage;\r\n        this._totalPages = this.options.totalPages;\r\n\r\n        this._refresh({\r\n          currentPage : true,\r\n          totalPages : true\r\n        });\r\n      },\r\n\r\n      _refresh: function (updates) {\r\n        var self = this;\r\n\r\n        function changePageNoBtns(currentPage,totalPages) {\r\n\r\n          // Create the numeric buttons.\r\n          // Variable of number control in the buttons.\r\n          var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n          var begin = 1;\r\n          var end = begin + totalPageNoBtns - 1;\r\n\r\n          /*\r\n           * Align the values in the begin and end variables if the user has the\r\n           * possibility that select a page that doens't appear in the paginador.\r\n           * e.g currentPage = 1, and user go to the 20 page.\r\n           */\r\n          while ((currentPage < begin) || (currentPage > end)) {\r\n            if (currentPage > end) {\r\n               begin += totalPageNoBtns;\r\n               end += totalPageNoBtns;\r\n\r\n               if (end > totalPages) {\r\n                 begin = begin - (end - totalPages);\r\n                 end = totalPages;\r\n               }\r\n             } else {\r\n               begin -= totalPageNoBtns;\r\n               end -= totalPageNoBtns;\r\n\r\n               if (begin < 0) {\r\n                 end = end + (begin + totalPageNoBtns);\r\n                 begin = 1;\r\n               }\r\n             }\r\n          }\r\n         /*\r\n          * Verify if the user clicks in the last page show by paginator.\r\n          * If yes, the paginator advances.\r\n          */\r\n          if ((currentPage === end) && (totalPages != 1)) {\r\n            begin = currentPage - 1;\r\n            end = begin + totalPageNoBtns - 1;\r\n\r\n            if (end >= totalPages) {\r\n              begin = begin - (end - (totalPages));\r\n              end = totalPages;\r\n            }\r\n          }\r\n\r\n          /*\r\n           * Verify it the user clicks in the first page show by paginator.\r\n           * If yes, the paginator retrogress\r\n           */\r\n           if ((begin === currentPage) && (totalPages != 1)) {\r\n             if (currentPage != 1) {\r\n               end = currentPage + 1;\r\n               begin = end - (totalPageNoBtns - 1);\r\n             }\r\n           }\r\n\r\n           var count = self.$numeric.size(),\r\n               visibles = end-begin + 1,\r\n               i = 0;\r\n\r\n           self.$numeric.filter(\".active\").removeClass(\"active\");\r\n           while (i<visibles) {\r\n             var pageNo = i + begin,\r\n                 $btn = self.$numeric.eq(i);\r\n             $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n             if (pageNo == currentPage) {\r\n              $btn.addClass(\"active\");\r\n             }\r\n             i++;\r\n           }\r\n           while (i<count) {\r\n             self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n             i++;\r\n           }\r\n\r\n\r\n        }\r\n\r\n        function changeLabeldBtns(currentPage,totalPages) {\r\n          if (currentPage < 1) {\r\n            throw('Page can\\'t be less than 1');\r\n          } else if (currentPage > totalPages) {\r\n            throw('Page is bigger than total pages');\r\n          }\r\n\r\n          if (totalPages < 1) {\r\n            throw('Total Pages can\\'t be less than 1');\r\n          }\r\n\r\n          if (currentPage == 1 ) {\r\n            self.$first.addClass(\"disabled\");\r\n            self.$prev.addClass(\"disabled\");\r\n          } else {\r\n            self.$first.removeClass(\"disabled\");\r\n            self.$prev.removeClass(\"disabled\");\r\n          }\r\n\r\n          if (currentPage == totalPages ) {\r\n            self.$last.addClass(\"disabled\");\r\n            self.$next.addClass(\"disabled\");\r\n          } else {\r\n            self.$last.removeClass(\"disabled\");\r\n            self.$next.removeClass(\"disabled\");\r\n          }\r\n        }\r\n\r\n        if (updates.currentPage || updates.totalPages) {\r\n          var currentPage = self.currentPage(),\r\n              totalPages = self.totalPages();\r\n\r\n          changePageNoBtns(currentPage,totalPages);\r\n          changeLabeldBtns(currentPage,totalPages);\r\n        }\r\n\r\n      },\r\n\r\n      currentPage : function(v) {\r\n        if (v !== undefined) {\r\n          this._currentPage = v;\r\n          this._refresh({\r\n            currentPage : true\r\n          });            \r\n          return this;\r\n        } else {\r\n          return this._currentPage;\r\n        }\r\n      },\r\n\r\n      totalPages : function(v) {\r\n        if (v !== undefined) {\r\n          this._totalPages = v;\r\n          this._refresh({\r\n            totalPages : true\r\n          });\r\n          return this;\r\n        } else {\r\n          return this._totalPages;\r\n        }\r\n      }\r\n  });\r\n\r\n  plugins.register(Pagination);\r\n\r\n\r\n  return panels.Pagination = Pagination;\r\n});\ndefine('skylark-domx-panels/Tab',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./panels\"\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab =  plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"domx.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.bs.tab.data-api\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.TRANSITION_DURATION = 150\n\n\n  plugins.register(Tab);\n\n  return panels.Tab = Tab;\n});\n\ndefine('skylark-domx-panels/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins\",\r\n    \"skylark-domx-popups/Dropdown\",\r\n    \"./panels\",\r\n    \"./Tab\"\r\n], function(langx, browser, eventer, noder, geom,  $, plugins,Dropdown,panels, Tab) {\r\n\r\n    var TabStrip = plugins.Plugin.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"domx.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          },\r\n\r\n          droptabs : {\r\n            selectors : {\r\n              dropdown : \"li.droptabs\",\r\n              dropdownMenu    : \"ul.dropdown-menu\",\r\n              dropdownTabs    : \"li\",\r\n              dropdownCaret   : \"b.caret\",\r\n              visibleTabs     : \">li:not(.dropdown)\",\r\n            },\r\n            auto              : true,\r\n            pullDropdownRight : true,\r\n\r\n\r\n          }\r\n        },\r\n\r\n     _construct : function(elm,options) {\r\n          this.overrided(elm,options);\r\n          this._velm = this.elmx();\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').plugin(Dropdown.prototype.pluginName);\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).plugin(Tab.prototype.pluginName, {\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        arrange : function () {\r\n\r\n          var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\r\n              visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\r\n\r\n              $container = this.$header;\r\n          var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\r\n          var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\r\n          var dropdownLabel = $('>a', dropdown).clone();\r\n          var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\r\n\r\n          // We only want the default label, strip the caret out\r\n          $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\r\n\r\n          if (this.options.droptabs.pullDropdownRight) {\r\n            $(dropdown).addClass('pull-right');\r\n          }\r\n\r\n          var $dropdownTabs = function () {\r\n            return $(dropdownTabsSelector, dropdownMenu);\r\n          }\r\n\r\n          var $visibleTabs = function () {\r\n            return $(visibleTabsSelector, $container);\r\n          }\r\n\r\n          function getFirstHiddenElementWidth() {\r\n            var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getHiddenElementWidth(elem) {\r\n            var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getDropdownLabel() {\r\n            var labelText = 'Dropdown';\r\n            if ($(dropdown).hasClass('active')) {\r\n              labelText = $('>li.active>a', dropdownMenu).html();\r\n            } else if (dropdownLabel.html().length > 0) {\r\n              labelText = dropdownLabel.html();\r\n            }\r\n\r\n            labelText = $.trim(labelText);\r\n\r\n            if (labelText.length > 10) {\r\n              labelText = labelText.substring(0, 10) + '...';\r\n            }\r\n\r\n            return labelText;\r\n          }\r\n\r\n          function renderDropdownLabel() {\r\n            $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\r\n          }\r\n\r\n          function manageActive(elem) {\r\n            //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\r\n            $('a', $(elem)).on('show.bs.tab', function (e) {\r\n              $(e.relatedTarget).parent().removeClass('active');\r\n            })\r\n            $('a', $(elem)).on('shown.bs.tab', function (e) {\r\n              renderDropdownLabel();\r\n            })\r\n\r\n          }\r\n\r\n          function checkDropdownSelection() {\r\n            if ($($dropdownTabs()).filter('.active').length > 0) {\r\n              $(dropdown).addClass('active');\r\n            } else {\r\n              $(dropdown).removeClass('active');\r\n            }\r\n\r\n            renderDropdownLabel();\r\n          }\r\n\r\n\r\n          var visibleTabsWidth = function () {\r\n            var visibleTabsWidth = 0;\r\n            $($visibleTabs()).each(function( index ) {\r\n              visibleTabsWidth += parseInt($(this).outerWidth(), 10);\r\n            });\r\n            visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\r\n            return visibleTabsWidth;\r\n          }\r\n\r\n          var availableSpace = function () {\r\n            return $container.outerWidth()-visibleTabsWidth();\r\n          }\r\n\r\n          if (availableSpace()<0) {//we will hide tabs here\r\n            var x = availableSpace();\r\n            $($visibleTabs().get().reverse()).each(function( index ){\r\n              if (!($(this).hasClass('always-visible'))){\r\n                  $(this).prependTo(dropdownMenu);\r\n                  x=x+$(this).outerWidth();\r\n              }\r\n              if (x>=0) {return false;}\r\n            });\r\n          }\r\n\r\n          if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\r\n            var x = availableSpace();\r\n            $($dropdownTabs()).each(function( index ){\r\n              if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\r\n                $(this).appendTo($container);\r\n                x = x-$(this).outerWidth();\r\n              } else {return false;}\r\n             });\r\n\r\n            if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\r\n              // If not pulling-right, keep the dropdown at the end of the container.\r\n              $(dropdown).detach().insertAfter($container.find('li:last-child'));\r\n            }\r\n          }\r\n\r\n          if ($dropdownTabs().length <= 0) {\r\n            dropdown.hide();\r\n          } else {\r\n            dropdown.show();\r\n          }\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    plugins.register(TabStrip);\r\n\r\n\r\n    return panels.TabStrip = TabStrip;\r\n\r\n});\ndefine('skylark-domx-panels/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,$,plugins,panels){ \r\n\r\n\r\n  var Toolbar = plugins.Plugin.inherit({\r\n    klassName : \"Toolbar\",\r\n\r\n    pluginName : \"domx.toolbar\",\r\n\r\n    options : {\r\n      toolbarFloat: true,\r\n      toolbarHidden: false,\r\n      toolbarFloatOffset: 0,\r\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\r\n      separator : {\r\n        template :  '<li><span class=\"separator\"></span></li>'\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      //this.editor = editor;\r\n\r\n      //this.opts = langx.extend({}, this.opts, opts);\r\n      this.opts = this.options;\r\n\r\n\r\n      //if (!langx.isArray(this.opts.toolbar)) {\r\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      //}\r\n\r\n      this.wrapper = $(this._elm);\r\n      this.list = this.wrapper.find('ul');\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.toolbar', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.editable.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n\r\n        /*\r\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        */\r\n      }\r\n\r\n      /*\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      */\r\n\r\n      \r\n    },\r\n\r\n    addToolItem : function(itemWidget) {\r\n      $(itemWidget._elm).appendTo(this.list);\r\n      return this;\r\n    },\r\n\r\n    addSeparator : function() {\r\n      $(this.options.separator.template).appendTo(this.list);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Toolbar);\r\n\r\n  return panels.Toolbar = Toolbar;\r\n\r\n});\ndefine('skylark-domx-panels/main',[\r\n    \"./panels\",\r\n    \"./Accordion\",\r\n    \"./Pagination\",\r\n    \"./TabStrip\",\r\n    \"./Toolbar\"\r\n], function(panels) {\r\n    return panels;\r\n});\ndefine('skylark-domx-panels', ['skylark-domx-panels/main'], function (main) { return main; });\n\n"]}