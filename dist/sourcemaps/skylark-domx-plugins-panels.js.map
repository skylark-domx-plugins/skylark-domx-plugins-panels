{"version":3,"sources":["skylark-domx-plugins-panels.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","panels","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","attach","plugins","Resizable","Panel","Plugin","inherit","klassName","pluginName","options","resizable","minWidth","minHeight","border","classes","all","top","left","right","bottom","topLeft","topRight","bottomLeft","bottomRight","_construct","elm","this","overrided","_velm","elmx","_resizable","handle","directions","constraints","started","isResizing","moving","stopped","register","Collapse","Collapsible","toggler","selector","body","prototype","call","_expanded","$toggle","find","$body","on","toggle","expand","emit","plugin","show","collapse","hide","full","unfull","toogleFull","close","Accordion","panel","template","forEach","panelEl","Pane","group","push","_panels","get","addPanel","remove","expandAll","collapseAll","active","Movable","floatings","Floating","selectors","headerPane","contentPane","footerPane","titlebar","buttons","fullscreen","maximize","minimize","fixedContent","initMaximized","movable","dragHandle","dragCancel","$pane","_elm","isOpened","isMaximized","_movable","starting","elemCancel","target","closest","length","$close","$maximize","$minimize","$fullscreen","off","_keydown","trigger","idx","indexOf","splice","focus","$W","window","$D","document","removeClass","initModalLeft","width","modalWidth","scrollLeft","initModalTop","height","modalHeight","scrollTop","css","modalData","offset","addClass","resized","keyboard","which","charCode","ctrlKey","metaKey","altKey","i","Pagination","tagName","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","state","Number","$first","$prev","$last","$next","$numeric","self","checkCanAction","$elm","is","click","ret","numeric","pageNo","parseInt","_currentPage","_totalPages","_refresh","updates","totalPageNoBtns","Math","min","begin","end","count","size","visibles","filter","$btn","eq","changePageNoBtns","changeLabeldBtns","v","undefined","Dropdown","TabButton","TabStrip","header","tab","content","tabpane","droptabs","dropdown","dropdownMenu","dropdownTabs","dropdownCaret","visibleTabs","auto","pullDropdownRight","$header","$tabs","$content","$tabpanes","each","tabEl","arrange","dropdownTabsSelector","visibleTabsSelector","$container","dropdownLabel","clone","$dropdownTabs","$visibleTabs","tempElem","hiddenElementWidth","availableSpace","outerWidth","visibleTabsWidth","index","x","reverse","hasClass","prependTo","first","appendTo","detach","insertAfter","add","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","separator","toolbarHeight","_this","opts","wrapper","list","editor","editable","util","reflow","os","mobile","position","outerHeight","placeholderEl","addToolItem","itemWidget","addSeparator","Wizard","disablePreviousStep","selectedItem","step","$element","attr","currentStep","numSteps","$prevBtn","$nextBtn","kids","children","nextText","trim","append","steps","console","warn","proxy","previous","next","stepclicked","destroy","outerHTML","addSteps","l","$startPane","$startStep","$step","items","slice","arguments","$steps","$stepContent","Array","label","badge","pane","before","syncSteps","setState","removeSteps","howMany","$start","action","prev","item","canMovePrev","isFirstStep","isLastStep","last","lastText","prevSelector","$prevSteps","currentSelector","$currentStep","totalWidth","containerWidth","newMargin","create","initialized","li","currentTarget","evt","isDefaultPrevented","isNaN","direction","firstFormField","retVal","stepname","main"],"mappings":"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","file":"../skylark-domx-plugins-panels.js","sourcesContent":["define('skylark-domx-plugins-panels/panels',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\"\n],function(skylark,langx,browser,eventer,noder,geom,$){\n\tvar panels = {};\n\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\tlangx.mixin(panels, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n\treturn skylark.attach(\"domx.plugins.panels\",panels);\n\n});\n\ndefine('skylark-domx-plugins-panels/panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-domx-plugins-interact/resizable\",\r\n  \"./panels\",\r\n],function(langx,browser,eventer,noder,geom,$,plugins,Resizable,panels){\r\n\r\n  var Panel = plugins.Plugin.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panels.panel\",\r\n\r\n    options : {\r\n      resizable : {\r\n          minWidth: 320,\r\n          minHeight: 320,\r\n          border : {\r\n              classes :  {\r\n                  all : \"resizable-handle\",\r\n                  top : \"resizable-handle-n\",\r\n                  left: \"resizable-handle-w\",\r\n                  right: \"resizable-handle-e\",\r\n                  bottom: \"resizable-handle-s\", \r\n                  topLeft : \"resizable-handle-nw\", \r\n                  topRight : \"resizable-handle-ne\",\r\n                  bottomLeft : \"resizable-handle-sw\",             \r\n                  bottomRight : \"resizable-handle-se\"     \r\n              }\r\n          }\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n\r\n      if (this.options.resizable) {\r\n\r\n          this._resizable = new Resizable(elm,{\r\n              handle : {\r\n                  border : {\r\n                      directions : {\r\n                          top: true, //n\r\n                          left: true, //w\r\n                          right: true, //e\r\n                          bottom: true, //s\r\n                          topLeft : true, // nw\r\n                          topRight : true, // ne\r\n                          bottomLeft : true, // sw\r\n                          bottomRight : true // se                         \r\n                      },\r\n                      classes : {\r\n                          all : this.options.resizable.border.classes.all,\r\n                          top : this.options.resizable.border.classes.top,\r\n                          left: this.options.resizable.border.classes.left,\r\n                          right: this.options.resizable.border.classes.right,\r\n                          bottom: this.options.resizable.border.classes.bottom, \r\n                          topLeft : this.options.resizable.border.classes.topLeft, \r\n                          topRight : this.options.resizable.border.classes.topRight,\r\n                          bottomLeft : this.options.resizable.border.classes.bottomLeft,             \r\n                          bottomRight : this.options.resizable.border.classes.bottomRight                        \r\n                      }                        \r\n                  }\r\n              },\r\n              constraints : {\r\n                  minWidth : this.options.resizable.minWidth,\r\n                  minHeight : this.options.resizable.minHeight\r\n              },\r\n              started : () => {\r\n                  this.isResizing = true;\r\n              },\r\n              moving : function(e) {\r\n                  /*\r\n                  const imageWidth = $(image).width();\r\n                  const imageHeight = $(image).height();\r\n                  const stageWidth = $(stage).width();\r\n                  const stageHeight = $(stage).height();\r\n                  const left = (stageWidth - imageWidth) /2;\r\n                  const top = (stageHeight- imageHeight) /2;\r\n                  $(image).css({\r\n                      left,\r\n                      top\r\n                  });\r\n                  */\r\n              },\r\n              stopped : () => {\r\n                  this.isResizing = false;\r\n              }\r\n          });\r\n\r\n      }\r\n    },\r\n\r\n\r\n  });\r\n\r\n  plugins.register(Panel);\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-domx-plugins-panels/collapsible',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"skylark-domx-plugins-toggles/collapse\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,browser,eventer,noder,geom,$,plugins,Collapse,panels,Panel){\n\n  var Collapsible = plugins.Plugin.inherit({\n    klassName : \"Collapsible\",\n\n    pluginName : \"lark.panels.collapsible\",\n\n    options : {\n      toggler : {\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\n      },\n\n      body : {\n        selector : \".panel-panel\"\n      }\n    },\n\n    _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n      \n      this._expanded = false;\n      this.$toggle = this._velm.find(this.options.toggler.selector);\n      this.$body = this._velm.find(this.options.body.selector);\n      this.$toggle.on('click.panel',(e) => {\n        this.toggle();\n      });\n\n    },\n\n    expand : function() {\n      // expand this panel\n      this.emit(\"expanding\");\n      this.$body.plugin(Collapse.prototype.pluginName).show();\n      this._expanded = true;\n      this.emit(\"expanded\");\n    },\n\n    collapse : function() {\n      // collapse this panel\n      this.emit(\"collapsing\");\n      this.$body.plugin(Collapse.prototype.pluginName).hide();\n      this._expanded = false;\n      this.emit(\"collapsed\");\n    },\n\n    toggle : function() {\n      // toggle this panel\n      if (this._expanded) {\n        this.collapse();\n      } else {\n        this.expand();\n      }\n    },\n\n    full : function() {\n\n    },\n\n    unfull : function() {\n\n    },\n\n    toogleFull : function() {\n\n    },\n    \n    close: function () {\n    }\n\n\n  });\n\n  plugins.register(Collapsible);\n\n  return panels.Collapsible = Collapsible;\n\n});\n define('skylark-domx-plugins-panels/accordion',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-velm\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\",\n  \"./collapsible\"\n],function(langx,$,elmx,plugins,panels,Panel,Collapsible){\n\n  var Accordion = Panel.inherit({\n    klassName : \"Accordion\",\n\n    pluginName : \"lark.panels.accordion\",\n\n    options : {\n      panel: {\n        selector : \"> .panel\",\n        template : null,\n      }\n    },\n\n     _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n      var panels = [];\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\n        var panel = new Accordion.Pane(panelEl,{\n          group : this\n        });\n        panels.push(panel);\n      });\n      this._panels = panels;\n    },\n\n    panels : {\n      get : function() {\n\n      }\n    },\n\n\n    addPanel : function() {\n\n    },\n\n    /**\n     * Removes a group pane.\n     *\n     * @method remove\n     * @return {Accordion} The current widget.\n     */\n    remove : function() {\n\n    },\n\n    /**\n     * Expands a group pane.\n     *\n     * @method remove\n     * @return {Accordion} The current widget.\n     */\n    expand : function() {\n      // expand a panel\n\n    },\n\n    /**\n     * Expands all group panes.\n     *\n     * @method expandAll\n     * @return {Accordion} The current widget.\n     */\n    expandAll : function() {\n      // expand a panel\n\n    },\n\n    /**\n     * Collapse a group pane.\n     *\n     * @method collapse\n     * @return {Accordion} The current widget.\n     */\n    collapse : function() {\n\n    },\n\n    /**\n     * Collapses all group pane.\n     *\n     * @method collapseAll\n     * @return {Accordion} The current widget.\n     */\n    collapseAll : function() {\n\n    }\n  });\n\n  Accordion.Pane = Collapsible.inherit({\n    klassName : \"AccordionPane\",\n\n    expand : function() {\n      if (this.options.group.active) {\n        this.options.group.active.collapse();\n      }\n      this.overrided();\n      this.options.group.active = this;\n    },\n\n    collapse : function() {\n      this.overrided();\n      this.options.group.active = null;\n    },\n\n    toggle : function() {\n      this.overrided();\n    },\n\n    remove : function() {\n      this.overrided();\n    }\n\n  });\n\n  plugins.register(Accordion);\n\n  return panels.Accordion = Accordion;\n});\n\ndefine('skylark-domx-plugins-panels/floating',[\r\n    \"skylark-domx/noder\",\r\n    \"skylark-domx/eventer\",\r\n    \"skylark-domx/query\",\r\n    \"skylark-domx-plugins-base\",\r\n    \"skylark-domx-plugins-interact/movable\",\r\n    \"./panels\",\r\n    \"./panel\"\r\n], function (noder,eventer,$,plugins,Movable, panels,Panel) {\r\n    'use strict';\r\n\r\n    var floatings = [];\r\n\r\n    var Floating = Panel.inherit({\r\n        klassName : \"Floating\",\r\n\r\n        pluginName : \"lark.panels.floating\",\r\n\r\n        options : {\r\n            selectors : {\r\n                headerPane  : \"\",\r\n                contentPane : \"\",\r\n                footerPane  : \"\",\r\n                titlebar : \"\",\r\n                buttons : {\r\n                    \"fullscreen\" : \".button-fullscreen\",\r\n                    \"maximize\" : \".button-maximize\",\r\n                    \"minimize\" : \".button-minimize\",     \r\n                    \"close\" : \".button-close\"\r\n                }\r\n            },\r\n\r\n            classes : {\r\n                \"maximize\" : \"maximize\"\r\n            },\r\n\r\n            fixedContent: true,\r\n            initMaximized: false,\r\n\r\n            movable : {\r\n                dragHandle: false,\r\n                dragCancel: null\r\n            }\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            Panel.prototype._construct.call(this,elm,options);\r\n            this.$pane = $(this._elm);\r\n\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            if (this.options.movable) {\r\n                this._movable = new Movable(elm,{\r\n                    handle : this.options.movable.dragHandle,\r\n                    starting : (e) => {\r\n                        const   dragCancel = this.options.movable.dragCancel, \r\n                                elemCancel = $(e.target).closest(dragCancel);\r\n                        if (elemCancel.length) {\r\n                            return false;\r\n                        }\r\n                        if (this.isResizing || this.isMaximized) {\r\n                            return false;\r\n                        }\r\n\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            this.$close = this._velm.$(this.options.selectors.buttons.close);\r\n            this.$maximize = this._velm.$(this.options.selectors.buttons.maximize);\r\n            this.$minimize = this._velm.$(this.options.selectors.buttons.minimize);\r\n            this.$fullscreen = this._velm.$(this.options.selectors.buttons.fullscreen);\r\n\r\n\r\n            this.$close.off(\"click.window\").on(\"click.window\", e => {\r\n                this.close();\r\n            });\r\n            this.$fullscreen.off(\"click.window\").on(\"click.window\", () => {\r\n                this.fullscreen();\r\n            });\r\n            this.$maximize.off(\"click.window\").on(\"click.window\", () => {\r\n                this.maximize();\r\n            });\r\n            this.$pane.off(\"keydown.window\").on(\"keydown.window\", e => {\r\n                this._keydown(e);\r\n            });\r\n\r\n            floatings.push(this);\r\n        },\r\n        close: function() {\r\n            this.trigger('closing', this);\r\n            this.$pane.remove();\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            ///if (!$(Constants.CLASS_NS + '-modal').length) {\r\n            ///    if (this.options.fixedContent) {\r\n            ///        $('html').css({\r\n            ///            overflow: '',\r\n            ///            'padding-right': ''\r\n            ///        });\r\n            ///    }\r\n                ///if (this.options.multiInstances) {\r\n                ///    zIndex = this.options.zIndex;\r\n                ///}\r\n            ///    eventer.off(window,\"resize.window\");\r\n            var idx = floatings.indexOf(this);\r\n            if (idx>-1) {\r\n                floatings.splice(idx,1);\r\n            }\r\n            this.trigger('closed', this);\r\n        },\r\n\r\n        maximize: function() {\r\n            this.$pane.get(0).focus();\r\n            if (!this.isMaximized) {\r\n                this.modalData = {\r\n                    width: this.$pane.width(),\r\n                    height: this.$pane.height(),\r\n                    left: this.$pane.offset().left,\r\n                    top: this.$pane.offset().top\r\n                };\r\n                this.$pane.addClass(this.options.classes.maximize);\r\n                this.$pane.css({\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    left: 0,\r\n                    top: 0\r\n                });\r\n                this.isMaximized = true;\r\n            } else {\r\n                let $W = $(window),$D = $(document);\r\n                this.$pane.removeClass(this.options.classes.maximize);\r\n                const initModalLeft = ($W.width() - this.options.modalWidth) / 2 + $D.scrollLeft();\r\n                const initModalTop = ($W.height() - this.options.modalHeight) / 2 + $D.scrollTop();\r\n                this.$pane.css({\r\n                    width: this.modalData.width ? this.modalData.width : this.options.modalWidth,\r\n                    height: this.modalData.height ? this.modalData.height : this.options.modalHeight,\r\n                    left: this.modalData.left ? this.modalData.left : initModalLeft,\r\n                    top: this.modalData.top ? this.modalData.top : initModalTop\r\n                });\r\n                this.isMaximized = false;\r\n            }\r\n\r\n            eventer.resized(this._elm);\r\n        },\r\n        fullscreen: function() {\r\n            this.$pane.get(0).focus();\r\n            noder.fullscreen(this.$pane[0]);\r\n        },\r\n        _keydown: function(e) {\r\n            if (!this.options.keyboard) {\r\n                return false;\r\n            }\r\n            const keyCode = e.keyCode || e.which || e.charCode;\r\n            const ctrlKey = e.ctrlKey || e.metaKey;\r\n            const altKey = e.altKey || e.metaKey;\r\n            switch (keyCode) {\r\n\r\n                // Q\r\n                case 81:\r\n                    this.close();\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    eventer.on(window,\"resize.window\", ()=>{\r\n        for (let i=0; i<floatings.length; i++ ) {\r\n            eventer.resized(floatings[i]._elm);\r\n        }\r\n    });\r\n\r\n    return panels.Floating = Floating;\r\n});\ndefine('skylark-domx-plugins-panels/pagination',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Panel){\n\n  'use strict';\n\n  var Pagination = Panel.inherit({\n      klassName : \"Pagination\",\n\n      pluginName : \"lark.panels.pagination\",\n\n      options : {\n          tagName : \"ul\",\n          css : \"\",\n          selectors : {\n              firstNavi : \"li[aria-label='first']\",\n              prevNavi : \"li[aria-label='prev']\",\n              nextNavi : \"li[aria-label='next']\",\n              lastNavi : \"li[aria-label='last']\",\n              numericNavi : \"li:not([aria-label])\",\n              numericTxt  : \"a\"\n          },\n          totalPages: 7,\n          maxButtonsVisible: 5,\n          currentPage: 1     \n      },\n\n      state : {\n          totalPages : Number,\n          currentPage : Number\n      },\n\n      _construct : function(elm,options) {\n        Panel.prototype._construct.call(this,elm,options);\n\n        this.$first = this._velm.$(this.options.selectors.firstNavi);\n        this.$prev = this._velm.$(this.options.selectors.prevNavi);\n        this.$last = this._velm.$(this.options.selectors.lastNavi);\n        this.$next = this._velm.$(this.options.selectors.nextNavi);\n        this.$numeric = this._velm.$(this.options.selectors.numericNavi);\n\n        var self = this;\n\n        function checkCanAction(elm) {\n          var $elm = $(elm);\n          if ($elm.is(\".disabled,.active\")) {\n            return false;\n          } else {\n            return $elm;\n          }\n        }\n\n        this.$first.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(1);\n        });\n\n        this.$prev.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.currentPage()-1);\n        });\n\n        this.$last.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.totalPages());\n        });\n\n        this.$next.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.currentPage()+1);\n        });\n\n        this.$numeric.click(function(){\n          var ret = checkCanAction(this)\n          if (!ret) {\n            return;\n          }\n          var numeric = ret.find(self.options.selectors.numericTxt).text(),\n              pageNo = parseInt(numeric);\n          self.currentPage(pageNo);\n\n        });\n\n        this._currentPage = this.options.currentPage;\n        this._totalPages = this.options.totalPages;\n\n        this._refresh({\n          currentPage : true,\n          totalPages : true\n        });\n      },\n\n      _refresh: function (updates) {\n        var self = this;\n\n        function changePageNoBtns(currentPage,totalPages) {\n\n          // Create the numeric buttons.\n          // Variable of number control in the buttons.\n          var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\n          var begin = 1;\n          var end = begin + totalPageNoBtns - 1;\n\n          /*\n           * Align the values in the begin and end variables if the user has the\n           * possibility that select a page that doens't appear in the paginador.\n           * e.g currentPage = 1, and user go to the 20 page.\n           */\n          while ((currentPage < begin) || (currentPage > end)) {\n            if (currentPage > end) {\n               begin += totalPageNoBtns;\n               end += totalPageNoBtns;\n\n               if (end > totalPages) {\n                 begin = begin - (end - totalPages);\n                 end = totalPages;\n               }\n             } else {\n               begin -= totalPageNoBtns;\n               end -= totalPageNoBtns;\n\n               if (begin < 0) {\n                 end = end + (begin + totalPageNoBtns);\n                 begin = 1;\n               }\n             }\n          }\n         /*\n          * Verify if the user clicks in the last page show by paginator.\n          * If yes, the paginator advances.\n          */\n          if ((currentPage === end) && (totalPages != 1)) {\n            begin = currentPage - 1;\n            end = begin + totalPageNoBtns - 1;\n\n            if (end >= totalPages) {\n              begin = begin - (end - (totalPages));\n              end = totalPages;\n            }\n          }\n\n          /*\n           * Verify it the user clicks in the first page show by paginator.\n           * If yes, the paginator retrogress\n           */\n           if ((begin === currentPage) && (totalPages != 1)) {\n             if (currentPage != 1) {\n               end = currentPage + 1;\n               begin = end - (totalPageNoBtns - 1);\n             }\n           }\n\n           var count = self.$numeric.size(),\n               visibles = end-begin + 1,\n               i = 0;\n\n           self.$numeric.filter(\".active\").removeClass(\"active\");\n           while (i<visibles) {\n             var pageNo = i + begin,\n                 $btn = self.$numeric.eq(i);\n             $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\n             if (pageNo == currentPage) {\n              $btn.addClass(\"active\");\n             }\n             i++;\n           }\n           while (i<count) {\n             self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\n             i++;\n           }\n\n\n        }\n\n        function changeLabeldBtns(currentPage,totalPages) {\n          if (currentPage < 1) {\n            throw('Page can\\'t be less than 1');\n          } else if (currentPage > totalPages) {\n            throw('Page is bigger than total pages');\n          }\n\n          if (totalPages < 1) {\n            throw('Total Pages can\\'t be less than 1');\n          }\n\n          if (currentPage == 1 ) {\n            self.$first.addClass(\"disabled\");\n            self.$prev.addClass(\"disabled\");\n          } else {\n            self.$first.removeClass(\"disabled\");\n            self.$prev.removeClass(\"disabled\");\n          }\n\n          if (currentPage == totalPages ) {\n            self.$last.addClass(\"disabled\");\n            self.$next.addClass(\"disabled\");\n          } else {\n            self.$last.removeClass(\"disabled\");\n            self.$next.removeClass(\"disabled\");\n          }\n        }\n\n        if (updates.currentPage || updates.totalPages) {\n          var currentPage = self.currentPage(),\n              totalPages = self.totalPages();\n\n          changePageNoBtns(currentPage,totalPages);\n          changeLabeldBtns(currentPage,totalPages);\n        }\n\n      },\n\n      currentPage : function(v) {\n        if (v !== undefined) {\n          this._currentPage = v;\n          this._refresh({\n            currentPage : true\n          });            \n          return this;\n        } else {\n          return this._currentPage;\n        }\n      },\n\n      totalPages : function(v) {\n        if (v !== undefined) {\n          this._totalPages = v;\n          this._refresh({\n            totalPages : true\n          });\n          return this;\n        } else {\n          return this._totalPages;\n        }\n      }\n  });\n\n  plugins.register(Pagination);\n\n\n  return panels.Pagination = Pagination;\n});\ndefine('skylark-domx-plugins-panels/tabstrip',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins-base\",\n    \"skylark-domx-plugins-popups/Dropdown\",\n    \"skylark-domx-plugins-toggles/tab\",\n    \"./panels\",\n    \"./panel\"\n], function(langx, browser, eventer, noder, geom,  $, plugins,Dropdown, TabButton,panels,Panel) {\n\n    var TabStrip = Panel.inherit({\n        klassName : \"TabStrip\",\n        pluginName : \"lark.panels.tabstrip\",\n\n        options : {\n          selectors : {\n            header : \".nav-tabs\",\n            tab : \"[data-toggle=\\\"tab\\\"]\",\n            content : \".tab-content\",\n            tabpane : \".tab-pane\"\n          },\n\n          droptabs : {\n            selectors : {\n              dropdown : \"li.droptabs\",\n              dropdownMenu    : \"ul.dropdown-menu\",\n              dropdownTabs    : \"li\",\n              dropdownCaret   : \"b.caret\",\n              visibleTabs     : \">li:not(.dropdown)\",\n            },\n            auto              : true,\n            pullDropdownRight : true,\n\n\n          }\n        },\n\n     _construct : function(elm,options) {\n        Panel.prototype._construct.call(this,elm,options);\n\n        this.$header = this._velm.$(this.options.selectors.header); \n        this.$tabs = this.$header.find(this.options.selectors.tab);\n        this.$content = this._velm.$(this.options.selectors.content);\n        this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\n\n        this.$header.find('[data-toggle=\"dropdown\"]').plugin(Dropdown.prototype.pluginName);\n\n        var self = this;\n        this.$tabs.each(function(idx,tabEl){\n          $(tabEl).plugin(TabButton.prototype.pluginName, {\n            target : self.$tabpanes[idx]\n          });\n        });\n\n      },\n\n      arrange : function () {\n\n        var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\n            visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\n\n            $container = this.$header;\n        var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\n        var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\n        var dropdownLabel = $('>a', dropdown).clone();\n        var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\n\n        // We only want the default label, strip the caret out\n        $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\n\n        if (this.options.droptabs.pullDropdownRight) {\n          $(dropdown).addClass('pull-right');\n        }\n\n        var $dropdownTabs = function () {\n          return $(dropdownTabsSelector, dropdownMenu);\n        }\n\n        var $visibleTabs = function () {\n          return $(visibleTabsSelector, $container);\n        }\n\n        function getFirstHiddenElementWidth() {\n          var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\n          var hiddenElementWidth = $(tempElem).outerWidth();\n          $(tempElem).remove();\n          return hiddenElementWidth;\n        }\n\n        function getHiddenElementWidth(elem) {\n          var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\n          var hiddenElementWidth = $(tempElem).outerWidth();\n          $(tempElem).remove();\n          return hiddenElementWidth;\n        }\n\n        function getDropdownLabel() {\n          var labelText = 'Dropdown';\n          if ($(dropdown).hasClass('active')) {\n            labelText = $('>li.active>a', dropdownMenu).html();\n          } else if (dropdownLabel.html().length > 0) {\n            labelText = dropdownLabel.html();\n          }\n\n          labelText = $.trim(labelText);\n\n          if (labelText.length > 10) {\n            labelText = labelText.substring(0, 10) + '...';\n          }\n\n          return labelText;\n        }\n\n        function renderDropdownLabel() {\n          $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\n        }\n\n        function manageActive(elem) {\n          //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\n          $('a', $(elem)).on('show.bs.tab', function (e) {\n            $(e.relatedTarget).parent().removeClass('active');\n          })\n          $('a', $(elem)).on('shown.bs.tab', function (e) {\n            renderDropdownLabel();\n          })\n\n        }\n\n        function checkDropdownSelection() {\n          if ($($dropdownTabs()).filter('.active').length > 0) {\n            $(dropdown).addClass('active');\n          } else {\n            $(dropdown).removeClass('active');\n          }\n\n          renderDropdownLabel();\n        }\n\n\n        var visibleTabsWidth = function () {\n          var visibleTabsWidth = 0;\n          $($visibleTabs()).each(function( index ) {\n            visibleTabsWidth += parseInt($(this).outerWidth(), 10);\n          });\n          visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\n          return visibleTabsWidth;\n        }\n\n        var availableSpace = function () {\n          return $container.outerWidth()-visibleTabsWidth();\n        }\n\n        if (availableSpace()<0) {//we will hide tabs here\n          var x = availableSpace();\n          $($visibleTabs().get().reverse()).each(function( index ){\n            if (!($(this).hasClass('always-visible'))){\n                $(this).prependTo(dropdownMenu);\n                x=x+$(this).outerWidth();\n            }\n            if (x>=0) {return false;}\n          });\n        }\n\n        if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\n          var x = availableSpace();\n          $($dropdownTabs()).each(function( index ){\n            if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\n              $(this).appendTo($container);\n              x = x-$(this).outerWidth();\n            } else {return false;}\n           });\n\n          if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\n            // If not pulling-right, keep the dropdown at the end of the container.\n            $(dropdown).detach().insertAfter($container.find('li:last-child'));\n          }\n        }\n\n        if ($dropdownTabs().length <= 0) {\n          dropdown.hide();\n        } else {\n          dropdown.show();\n        }\n      },\n\n      add : function() {\n        //TODO\n      },\n\n      remove : function(){\n        //TODO\n      }\n    });\n\n    plugins.register(TabStrip);\n\n\n    return panels.TabStrip = TabStrip;\n\n});\ndefine('skylark-domx-plugins-panels/toolbar',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,$,plugins,panels,Panel){ \n\n\n  var Toolbar = Panel.inherit({\n    klassName : \"Toolbar\",\n\n    pluginName : \"lark.panels.toolbar\",\n\n    options : {\n      toolbarFloat: true,\n      toolbarHidden: false,\n      toolbarFloatOffset: 0,\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\n      separator : {\n        template :  '<li><span class=\"separator\"></span></li>'\n      }\n    },\n\n    _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n\n      var floatInitialized, initToolbarFloat, toolbarHeight;\n      //this.editor = editor;\n\n      //this.opts = langx.extend({}, this.opts, opts);\n      this.opts = this.options;\n\n\n      //if (!langx.isArray(this.opts.toolbar)) {\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\n      //}\n\n      this.wrapper = $(this._elm);\n      this.list = this.wrapper.find('ul');\n      this.list.on('click', function(e) {\n        return false;\n      });\n      this.wrapper.on('mousedown', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('.menu-on');\n        };\n      })(this));\n      $(document).on('mousedown.toolbar', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('menu-on');\n        };\n      })(this));\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\n        toolbarHeight = 0;\n        initToolbarFloat = (function(_this) {\n          return function() {\n            _this.wrapper.css('position', 'static');\n            _this.wrapper.width('auto');\n            _this.editor.editable.util.reflow(_this.wrapper);\n            _this.wrapper.width(_this.wrapper.outerWidth());\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\n            _this.wrapper.css('position', '');\n            toolbarHeight = _this.wrapper.outerHeight();\n            _this.editor.placeholderEl.css('top', toolbarHeight);\n            return true;\n          };\n        })(this);\n        floatInitialized = null;\n\n        /*\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\n          return floatInitialized = initToolbarFloat();\n        });\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\n          return function(e) {\n            var bottomEdge, scrollTop, topEdge;\n            if (!_this.wrapper.is(':visible')) {\n              return;\n            }\n            topEdge = _this.editor.wrapper.offset().top;\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\n              }\n            } else {\n              floatInitialized || (floatInitialized = initToolbarFloat());\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\n              }\n            }\n          };\n        })(this));\n        */\n      }\n\n      /*\n      this.editor.on('destroy', (function(_this) {\n        return function() {\n          return _this.buttons.length = 0;\n        };\n      })(this));\n      */\n\n      \n    },\n\n    addToolItem : function(itemWidget) {\n      $(itemWidget._elm).appendTo(this.list);\n      return this;\n    },\n\n    addSeparator : function() {\n      $(this.options.separator.template).appendTo(this.list);\n      return this;\n    }\n\n  });\n\n  plugins.register(Toolbar);\n\n  return panels.Toolbar = Toolbar;\n\n});\ndefine('skylark-domx-plugins-panels/wizard',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\"\n ],function(langx,browser,eventer,noder,geom,$,plugins,panels,Panel){\n\n\n\tvar Wizard = Panel.inherit({\n\t\tklassName: \"Wizard\",\n\n\t    pluginName : \"lark.panels.wizard\",\n\n\t    options : {\n\t\t\tdisablePreviousStep: false,\n\t\t\tselectedItem: {\n\t\t\t\tstep: -1\n\t\t\t}//-1 means it will attempt to look for \"active\" class in order to set the step\n\t    },\n\n\t    _construct : function(elm,options) {\n      \t\tPanel.prototype._construct.call(this,elm,options);\n\n\t\t\tthis.$element = this.$();\n\t\t\tthis.options.disablePreviousStep = (this.$element.attr('data-restrict') === 'previous') ? true : this.options.disablePreviousStep;\n\t\t\tthis.currentStep = this.options.selectedItem.step;\n\t\t\tthis.numSteps = this.$element.find('.steps li').length;\n\t\t\tthis.$prevBtn = this.$element.find('button.btn-prev');\n\t\t\tthis.$nextBtn = this.$element.find('button.btn-next');\n\n\t\t\tvar kids = this.$nextBtn.children().detach();\n\t\t\tthis.nextText = langx.trim(this.$nextBtn.text());\n\t\t\tthis.$nextBtn.append(kids);\n\n\t\t\tvar steps = this.$element.children('.steps-container');\n\t\t\t// maintains backwards compatibility with < 3.8, will be removed in the future\n\t\t\tif (steps.length === 0) {\n\t\t\t\tsteps = this.$element;\n\t\t\t\tthis.$element.addClass('no-steps-container');\n\t\t\t\tif (window && window.console && window.console.warn) {\n\t\t\t\t\twindow.console.warn('please update your wizard markup to include \".steps-container\" as seen in http://getfuelux.com/javascript.html#wizard-usage-markup');\n\t\t\t\t}\n\t\t\t}\n\t\t\tsteps = steps.find('.steps');\n\n\t\t\t// handle events\n\t\t\tthis.$prevBtn.on('click.fu.wizard', langx.proxy(this.previous, this));\n\t\t\tthis.$nextBtn.on('click.fu.wizard', langx.proxy(this.next, this));\n\t\t\tsteps.on('click.fu.wizard', 'li.complete', langx.proxy(this.stepclicked, this));\n\n\t\t\tthis.selectedItem(this.options.selectedItem);\n\n\t\t\tif (this.options.disablePreviousStep) {\n\t\t\t\tthis.$prevBtn.attr('disabled', true);\n\t\t\t\tthis.$element.find('.steps').addClass('previous-disabled');\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings [none]\n\t\t\t// empty elements to return to original markup [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\t//index is 1 based\n\t\t//second parameter can be array of objects [{ ... }, { ... }] or you can pass n additional objects as args\n\t\t//object structure is as follows (all params are optional): { badge: '', label: '', pane: '' }\n\t\taddSteps: function (index) {\n\t\t\tvar items = [].slice.call(arguments).slice(1);\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar i, l, $pane, $startPane, $startStep, $step;\n\n\t\t\tindex = (index === -1 || (index > (this.numSteps + 1))) ? this.numSteps + 1 : index;\n\t\t\tif (items[0] instanceof Array) {\n\t\t\t\titems = items[0];\n\t\t\t}\n\n\t\t\t$startStep = $steps.find('li:nth-child(' + index + ')');\n\t\t\t$startPane = $stepContent.find('.step-pane:nth-child(' + index + ')');\n\t\t\tif ($startStep.length < 1) {\n\t\t\t\t$startStep = null;\n\t\t\t}\n\n\t\t\tfor (i = 0, l = items.length; i < l; i++) {\n\t\t\t\t$step = $('<li data-step=\"' + index + '\"><span class=\"badge badge-info\"></span></li>');\n\t\t\t\t$step.append(items[i].label || '').append('<span class=\"chevron\"></span>');\n\t\t\t\t$step.find('.badge').append(items[i].badge || index);\n\n\t\t\t\t$pane = $('<div class=\"step-pane\" data-step=\"' + index + '\"></div>');\n\t\t\t\t$pane.append(items[i].pane || '');\n\n\t\t\t\tif (!$startStep) {\n\t\t\t\t\t$steps.append($step);\n\t\t\t\t\t$stepContent.append($pane);\n\t\t\t\t} else {\n\t\t\t\t\t$startStep.before($step);\n\t\t\t\t\t$startPane.before($pane);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis.syncSteps();\n\t\t\tthis.numSteps = $steps.find('li').length;\n\t\t\tthis.setState();\n\t\t},\n\n\t\t//index is 1 based, howMany is number to remove\n\t\tremoveSteps: function (index, howMany) {\n\t\t\tvar action = 'nextAll';\n\t\t\tvar i = 0;\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar $start;\n\n\t\t\thowMany = (howMany !== undefined) ? howMany : 1;\n\n\t\t\tif (index > $steps.find('li').length) {\n\t\t\t\t$start = $steps.find('li:last');\n\t\t\t} else {\n\t\t\t\t$start = $steps.find('li:nth-child(' + index + ')').prev();\n\t\t\t\tif ($start.length < 1) {\n\t\t\t\t\taction = 'children';\n\t\t\t\t\t$start = $steps;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$start[action]().each(function () {\n\t\t\t\tvar item = $(this);\n\t\t\t\tvar step = item.attr('data-step');\n\t\t\t\tif (i < howMany) {\n\t\t\t\t\titem.remove();\n\t\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:first').remove();\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t});\n\n\t\t\tthis.syncSteps();\n\t\t\tthis.numSteps = $steps.find('li').length;\n\t\t\tthis.setState();\n\t\t},\n\n\t\tsetState: function () {\n\t\t\tvar canMovePrev = (this.currentStep > 1);//remember, steps index is 1 based...\n\t\t\tvar isFirstStep = (this.currentStep === 1);\n\t\t\tvar isLastStep = (this.currentStep === this.numSteps);\n\n\t\t\t// disable buttons based on current step\n\t\t\tif (!this.options.disablePreviousStep) {\n\t\t\t\tthis.$prevBtn.attr('disabled', (isFirstStep === true || canMovePrev === false));\n\t\t\t}\n\n\t\t\t// change button text of last step, if specified\n\t\t\tvar last = this.$nextBtn.attr('data-last');\n\t\t\tif (last) {\n\t\t\t\tthis.lastText = last;\n\t\t\t\t// replace text\n\t\t\t\tvar text = this.nextText;\n\t\t\t\tif (isLastStep === true) {\n\t\t\t\t\ttext = this.lastText;\n\t\t\t\t\t// add status class to wizard\n\t\t\t\t\tthis.$element.addClass('complete');\n\t\t\t\t} else {\n\t\t\t\t\tthis.$element.removeClass('complete');\n\t\t\t\t}\n\n\t\t\t\tvar kids = this.$nextBtn.children().detach();\n\t\t\t\tthis.$nextBtn.text(text).append(kids);\n\t\t\t}\n\n\t\t\t// reset classes for all steps\n\t\t\tvar $steps = this.$element.find('.steps li');\n\t\t\t$steps.removeClass('active').removeClass('complete');\n\t\t\t$steps.find('span.badge').removeClass('badge-info').removeClass('badge-success');\n\n\t\t\t// set class for all previous steps\n\t\t\tvar prevSelector = '.steps li:lt(' + (this.currentStep - 1) + ')';\n\t\t\tvar $prevSteps = this.$element.find(prevSelector);\n\t\t\t$prevSteps.addClass('complete');\n\t\t\t$prevSteps.find('span.badge').addClass('badge-success');\n\n\t\t\t// set class for current step\n\t\t\tvar currentSelector = '.steps li:eq(' + (this.currentStep - 1) + ')';\n\t\t\tvar $currentStep = this.$element.find(currentSelector);\n\t\t\t$currentStep.addClass('active');\n\t\t\t$currentStep.find('span.badge').addClass('badge-info');\n\n\t\t\t// set display of target element\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar target = $currentStep.attr('data-step');\n\t\t\t$stepContent.find('.step-pane').removeClass('active');\n\t\t\t$stepContent.find('.step-pane[data-step=\"' + target + '\"]:first').addClass('active');\n\n\t\t\t// reset the wizard position to the left\n\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\n\n\t\t\t// check if the steps are wider than the container div\n\t\t\tvar totalWidth = 0;\n\t\t\tthis.$element.find('.steps > li').each(function () {\n\t\t\t\ttotalWidth += $(this).outerWidth();\n\t\t\t});\n\t\t\tvar containerWidth = 0;\n\t\t\tif (this.$element.find('.actions').length) {\n\t\t\t\tcontainerWidth = this.$element.width() - this.$element.find('.actions').first().outerWidth();\n\t\t\t} else {\n\t\t\t\tcontainerWidth = this.$element.width();\n\t\t\t}\n\n\t\t\tif (totalWidth > containerWidth) {\n\t\t\t\t// set the position so that the last step is on the right\n\t\t\t\tvar newMargin = totalWidth - containerWidth;\n\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\n\n\t\t\t\t// set the position so that the active step is in a good\n\t\t\t\t// position if it has been moved out of view\n\t\t\t\tif (this.$element.find('li.active').first().position().left < 200) {\n\t\t\t\t\tnewMargin += this.$element.find('li.active').first().position().left - 200;\n\t\t\t\t\tif (newMargin < 1) {\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only fire changed event after initializing\n\t\t\tif (typeof (this.initialized) !== 'undefined') {\n\t\t\t\tvar e = eventer.create('changed.fu.wizard');\n\t\t\t\tthis.$element.trigger(e, {\n\t\t\t\t\tstep: this.currentStep\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.initialized = true;\n\t\t},\n\n\t\tstepclicked: function (e) {\n\t\t\tvar li = $(e.currentTarget);\n\t\t\tvar index = this.$element.find('.steps li').index(li);\n\n\t\t\tif (index < this.currentStep && this.options.disablePreviousStep) {//enforce restrictions\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tvar evt = eventer.create('stepclicked.fu.wizard');\n\t\t\t\tthis.$element.trigger(evt, {\n\t\t\t\t\tstep: index + 1\n\t\t\t\t});\n\t\t\t\tif (evt.isDefaultPrevented()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.currentStep = (index + 1);\n\t\t\t\tthis.setState();\n\t\t\t}\n\t\t},\n\n\t\tsyncSteps: function () {\n\t\t\tvar i = 1;\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\n\t\t\t$steps.children().each(function () {\n\t\t\t\tvar item = $(this);\n\t\t\t\tvar badge = item.find('.badge');\n\t\t\t\tvar step = item.attr('data-step');\n\n\t\t\t\tif (!isNaN(parseInt(badge.html(), 10))) {\n\t\t\t\t\tbadge.html(i);\n\t\t\t\t}\n\n\t\t\t\titem.attr('data-step', i);\n\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:last').attr('data-step', i);\n\t\t\t\ti++;\n\t\t\t});\n\t\t},\n\n\t\tprevious: function () {\n\t\t\tif (this.options.disablePreviousStep || this.currentStep === 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\n\t\t\tthis.$element.trigger(e, {\n\t\t\t\tstep: this.currentStep,\n\t\t\t\tdirection: 'previous'\n\t\t\t});\n\t\t\tif (e.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}// don't increment ...what? Why?\n\n\t\t\tthis.currentStep -= 1;\n\t\t\tthis.setState();\n\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\n\t\t\tif (this.$prevBtn.is(':focus')) {\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\n\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\n\t\t\t\t\t$(firstFormField).focus();\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$prevBtn.is(':disabled')) {\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\n\t\t\t\t\tthis.$nextBtn.focus();\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\tnext: function () {\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\n\t\t\tthis.$element.trigger(e, {\n\t\t\t\tstep: this.currentStep,\n\t\t\t\tdirection: 'next'\n\t\t\t});\n\t\t\tif (e.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}// respect preventDefault in case dev has attached validation to step and wants to stop propagation based on it.\n\n\t\t\tif (this.currentStep < this.numSteps) {\n\t\t\t\tthis.currentStep += 1;\n\t\t\t\tthis.setState();\n\t\t\t} else {//is last step\n\t\t\t\tthis.$element.trigger('finished.fu.wizard');\n\t\t\t}\n\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\n\t\t\tif (this.$nextBtn.is(':focus')) {\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\n\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\n\t\t\t\t\t$(firstFormField).focus();\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$nextBtn.is(':disabled')) {\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\n\t\t\t\t\tthis.$prevBtn.focus();\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\tselectedItem: function (selectedItem) {\n\t\t\tvar retVal, step;\n\n\t\t\tif (selectedItem) {\n\t\t\t\tstep = selectedItem.step || -1;\n\t\t\t\t//allow selection of step by data-name\n\t\t\t\tstep = Number(this.$element.find('.steps li[data-name=\"' + step + '\"]').first().attr('data-step')) || Number(step);\n\n\t\t\t\tif (1 <= step && step <= this.numSteps) {\n\t\t\t\t\tthis.currentStep = step;\n\t\t\t\t\tthis.setState();\n\t\t\t\t} else {\n\t\t\t\t\tstep = this.$element.find('.steps li.active:first').attr('data-step');\n\t\t\t\t\tif (!isNaN(step)) {\n\t\t\t\t\t\tthis.currentStep = parseInt(step, 10);\n\t\t\t\t\t\tthis.setState();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tretVal = this;\n\t\t\t} else {\n\t\t\t\tretVal = {\n\t\t\t\t\tstep: this.currentStep\n\t\t\t\t};\n\t\t\t\tif (this.$element.find('.steps li.active:first[data-name]').length) {\n\t\t\t\t\tretVal.stepname = this.$element.find('.steps li.active:first').attr('data-name');\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn retVal;\n\t\t}\n\n\t});\n\n   plugins.register(Wizard);\n\n\treturn panels.Wizard = Wizard;\n\n});\n\ndefine('skylark-domx-plugins-panels/main',[\n    \"./panels\",\n    \"./accordion\",\n    \"./collapsible\",\n    \"./floating\",\n    \"./pagination\",\n    \"./panel\",\n    \"./tabstrip\",\n    \"./toolbar\",\n    \"./wizard\"\n], function(panels) {\n    return panels;\n});\ndefine('skylark-domx-plugins-panels', ['skylark-domx-plugins-panels/main'], function (main) { return main; });\n\n"]}