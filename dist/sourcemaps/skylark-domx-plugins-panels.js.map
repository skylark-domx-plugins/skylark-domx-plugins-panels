{"version":3,"sources":["skylark-domx-plugins-panels.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","panels","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","attach","plugins","Collapsable","Panel","Plugin","inherit","klassName","pluginName","options","toggler","selector","body","_construct","elm","this","overrided","_velm","elmx","_expanded","$toggle","find","$body","on","toggle","expand","emit","plugin","prototype","show","collapse","hide","full","unfull","toogleFull","close","register","Accordion","panel","template","forEach","panelEl","group","push","_panels","get","addPanel","remove","expandAll","collapseAll","active","Pagination","tagName","css","selectors","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","state","Number","$first","$prev","$last","$next","$numeric","self","checkCanAction","$elm","is","click","ret","numeric","pageNo","parseInt","_currentPage","_totalPages","_refresh","updates","totalPageNoBtns","Math","min","begin","end","count","size","visibles","i","filter","removeClass","$btn","eq","addClass","changePageNoBtns","changeLabeldBtns","v","undefined","Dropdown","TabButton","TabStrip","header","tab","content","tabpane","droptabs","dropdown","dropdownMenu","dropdownTabs","dropdownCaret","visibleTabs","auto","pullDropdownRight","$header","$tabs","$content","$tabpanes","each","idx","tabEl","target","arrange","dropdownTabsSelector","visibleTabsSelector","$container","dropdownLabel","clone","$dropdownTabs","$visibleTabs","tempElem","hiddenElementWidth","availableSpace","outerWidth","visibleTabsWidth","index","x","reverse","hasClass","prependTo","first","appendTo","detach","insertAfter","length","add","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","separator","toolbarHeight","_this","opts","wrapper","_elm","list","document","width","editor","editable","util","reflow","os","mobile","position","left","offset","outerHeight","placeholderEl","addToolItem","itemWidget","addSeparator","Wizard","disablePreviousStep","selectedItem","step","$element","attr","currentStep","numSteps","$prevBtn","$nextBtn","kids","children","nextText","trim","append","steps","window","console","warn","proxy","previous","next","stepclicked","destroy","outerHTML","addSteps","l","$pane","$startPane","$startStep","$step","items","slice","call","arguments","$steps","$stepContent","Array","label","badge","pane","before","syncSteps","setState","removeSteps","howMany","$start","action","prev","item","canMovePrev","isFirstStep","isLastStep","last","lastText","prevSelector","$prevSteps","currentSelector","$currentStep","totalWidth","containerWidth","newMargin","create","trigger","initialized","li","currentTarget","evt","isDefaultPrevented","isNaN","direction","firstFormField","focus","retVal","stepname","main"],"mappings":"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","file":"../skylark-domx-plugins-panels.js","sourcesContent":["define('skylark-domx-plugins-panels/panels',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\"\n],function(skylark,langx,browser,eventer,noder,geom,$){\n\tvar panels = {};\n\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\tlangx.mixin(panels, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n\treturn skylark.attach(\"domx.plugins.panels\",panels);\n\n});\n\ndefine('skylark-domx-plugins-panels/Panel',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"skylark-domx-plugins-toggles/Collapsable\",\n  \"./panels\",\n],function(langx,browser,eventer,noder,geom,$,plugins,Collapsable,panels){\n\n  var Panel = plugins.Plugin.inherit({\n    klassName : \"Panel\",\n\n    pluginName : \"domx.panels.panel\",\n\n    options : {\n      toggler : {\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\n      },\n\n      body : {\n        selector : \".panel-collapse\"\n      }\n    },\n\n    _construct : function(elm,options) {\n      this.overrided(elm,options);\n      this._velm = this.elmx();\n      this._expanded = false;\n      this.$toggle = this._velm.find(this.options.toggler.selector);\n      this.$body = this._velm.find(this.options.body.selector);\n      this.$toggle.on('click.panel',(e) => {\n        this.toggle();\n      });\n\n    },\n\n    expand : function() {\n      // expand this panel\n      this.emit(\"expanding\");\n      this.$body.plugin(Collapsable.prototype.pluginName).show();\n      this._expanded = true;\n      this.emit(\"expanded\");\n    },\n\n    collapse : function() {\n      // collapse this panel\n      this.emit(\"collapsing\");\n      this.$body.plugin(Collapsable.prototype.pluginName).hide();\n      this._expanded = false;\n      this.emit(\"collapsed\");\n    },\n\n    toggle : function() {\n      // toggle this panel\n      if (this._expanded) {\n        this.collapse();\n      } else {\n        this.expand();\n      }\n    },\n\n    full : function() {\n\n    },\n\n    unfull : function() {\n\n    },\n\n    toogleFull : function() {\n\n    },\n    \n    close: function () {\n    }\n\n\n  });\n\n  plugins.register(Panel);\n\n  return Panel;\n\n});\n define('skylark-domx-plugins-panels/Accordion',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-velm\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./Panel\"\n],function(langx,$,elmx,plugins,panels,Panel){\n\n  var Accordion = plugins.Plugin.inherit({\n    klassName : \"Accordion\",\n\n    pluginName : \"domx.panels.accordion\",\n\n    options : {\n      panel: {\n        selector : \"> .panel\",\n        template : null,\n      }\n    },\n\n     _construct : function(elm,options) {\n      this.overrided(elm,options);\n      this._velm = this.elmx();\n      var panels = [];\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\n        var panel = new Accordion.Panel(panelEl,{\n          group : this\n        });\n        panels.push(panel);\n      });\n      this._panels = panels;\n    },\n\n    panels : {\n      get : function() {\n\n      }\n    },\n\n\n    addPanel : function() {\n\n    },\n\n    /**\n     * Removes a group pane.\n     *\n     * @method remove\n     * @return {Accordion} The current widget.\n     */\n    remove : function() {\n\n    },\n\n    /**\n     * Expands a group pane.\n     *\n     * @method remove\n     * @return {Accordion} The current widget.\n     */\n    expand : function() {\n      // expand a panel\n\n    },\n\n    /**\n     * Expands all group panes.\n     *\n     * @method expandAll\n     * @return {Accordion} The current widget.\n     */\n    expandAll : function() {\n      // expand a panel\n\n    },\n\n    /**\n     * Collapse a group pane.\n     *\n     * @method collapse\n     * @return {Accordion} The current widget.\n     */\n    collapse : function() {\n\n    },\n\n    /**\n     * Collapses all group pane.\n     *\n     * @method collapseAll\n     * @return {Accordion} The current widget.\n     */\n    collapseAll : function() {\n\n    }\n  });\n\n  Accordion.Panel = Panel.inherit({\n    klassName : \"AccordionPanel\",\n\n    expand : function() {\n      if (this.options.group.active) {\n        this.options.group.active.collapse();\n      }\n      this.overrided();\n      this.options.group.active = this;\n    },\n\n    collapse : function() {\n      this.overrided();\n      this.options.group.active = null;\n    },\n\n    toggle : function() {\n      this.overrided();\n    },\n\n    remove : function() {\n      this.overrided();\n    }\n\n  });\n\n  plugins.register(Accordion);\n\n  return panels.Accordion = Accordion;\n});\n\ndefine('skylark-domx-plugins-panels/Pagination',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\"\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\n\n  'use strict';\n\n  var Pagination = plugins.Plugin.inherit({\n      klassName : \"Pagination\",\n\n      pluginName : \"domx.panels.pagination\",\n\n      options : {\n          tagName : \"ul\",\n          css : \"\",\n          selectors : {\n              firstNavi : \"li[aria-label='first']\",\n              prevNavi : \"li[aria-label='prev']\",\n              nextNavi : \"li[aria-label='next']\",\n              lastNavi : \"li[aria-label='last']\",\n              numericNavi : \"li:not([aria-label])\",\n              numericTxt  : \"a\"\n          },\n          totalPages: 7,\n          maxButtonsVisible: 5,\n          currentPage: 1     \n      },\n\n      state : {\n          totalPages : Number,\n          currentPage : Number\n      },\n\n      _construct : function(elm,options) {\n        this.overrided(elm,options);\n        this._velm = this.elmx();\n\n        this.$first = this._velm.$(this.options.selectors.firstNavi);\n        this.$prev = this._velm.$(this.options.selectors.prevNavi);\n        this.$last = this._velm.$(this.options.selectors.lastNavi);\n        this.$next = this._velm.$(this.options.selectors.nextNavi);\n        this.$numeric = this._velm.$(this.options.selectors.numericNavi);\n\n        var self = this;\n\n        function checkCanAction(elm) {\n          var $elm = $(elm);\n          if ($elm.is(\".disabled,.active\")) {\n            return false;\n          } else {\n            return $elm;\n          }\n        }\n\n        this.$first.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(1);\n        });\n\n        this.$prev.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.currentPage()-1);\n        });\n\n        this.$last.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.totalPages());\n        });\n\n        this.$next.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.currentPage()+1);\n        });\n\n        this.$numeric.click(function(){\n          var ret = checkCanAction(this)\n          if (!ret) {\n            return;\n          }\n          var numeric = ret.find(self.options.selectors.numericTxt).text(),\n              pageNo = parseInt(numeric);\n          self.currentPage(pageNo);\n\n        });\n\n        this._currentPage = this.options.currentPage;\n        this._totalPages = this.options.totalPages;\n\n        this._refresh({\n          currentPage : true,\n          totalPages : true\n        });\n      },\n\n      _refresh: function (updates) {\n        var self = this;\n\n        function changePageNoBtns(currentPage,totalPages) {\n\n          // Create the numeric buttons.\n          // Variable of number control in the buttons.\n          var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\n          var begin = 1;\n          var end = begin + totalPageNoBtns - 1;\n\n          /*\n           * Align the values in the begin and end variables if the user has the\n           * possibility that select a page that doens't appear in the paginador.\n           * e.g currentPage = 1, and user go to the 20 page.\n           */\n          while ((currentPage < begin) || (currentPage > end)) {\n            if (currentPage > end) {\n               begin += totalPageNoBtns;\n               end += totalPageNoBtns;\n\n               if (end > totalPages) {\n                 begin = begin - (end - totalPages);\n                 end = totalPages;\n               }\n             } else {\n               begin -= totalPageNoBtns;\n               end -= totalPageNoBtns;\n\n               if (begin < 0) {\n                 end = end + (begin + totalPageNoBtns);\n                 begin = 1;\n               }\n             }\n          }\n         /*\n          * Verify if the user clicks in the last page show by paginator.\n          * If yes, the paginator advances.\n          */\n          if ((currentPage === end) && (totalPages != 1)) {\n            begin = currentPage - 1;\n            end = begin + totalPageNoBtns - 1;\n\n            if (end >= totalPages) {\n              begin = begin - (end - (totalPages));\n              end = totalPages;\n            }\n          }\n\n          /*\n           * Verify it the user clicks in the first page show by paginator.\n           * If yes, the paginator retrogress\n           */\n           if ((begin === currentPage) && (totalPages != 1)) {\n             if (currentPage != 1) {\n               end = currentPage + 1;\n               begin = end - (totalPageNoBtns - 1);\n             }\n           }\n\n           var count = self.$numeric.size(),\n               visibles = end-begin + 1,\n               i = 0;\n\n           self.$numeric.filter(\".active\").removeClass(\"active\");\n           while (i<visibles) {\n             var pageNo = i + begin,\n                 $btn = self.$numeric.eq(i);\n             $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\n             if (pageNo == currentPage) {\n              $btn.addClass(\"active\");\n             }\n             i++;\n           }\n           while (i<count) {\n             self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\n             i++;\n           }\n\n\n        }\n\n        function changeLabeldBtns(currentPage,totalPages) {\n          if (currentPage < 1) {\n            throw('Page can\\'t be less than 1');\n          } else if (currentPage > totalPages) {\n            throw('Page is bigger than total pages');\n          }\n\n          if (totalPages < 1) {\n            throw('Total Pages can\\'t be less than 1');\n          }\n\n          if (currentPage == 1 ) {\n            self.$first.addClass(\"disabled\");\n            self.$prev.addClass(\"disabled\");\n          } else {\n            self.$first.removeClass(\"disabled\");\n            self.$prev.removeClass(\"disabled\");\n          }\n\n          if (currentPage == totalPages ) {\n            self.$last.addClass(\"disabled\");\n            self.$next.addClass(\"disabled\");\n          } else {\n            self.$last.removeClass(\"disabled\");\n            self.$next.removeClass(\"disabled\");\n          }\n        }\n\n        if (updates.currentPage || updates.totalPages) {\n          var currentPage = self.currentPage(),\n              totalPages = self.totalPages();\n\n          changePageNoBtns(currentPage,totalPages);\n          changeLabeldBtns(currentPage,totalPages);\n        }\n\n      },\n\n      currentPage : function(v) {\n        if (v !== undefined) {\n          this._currentPage = v;\n          this._refresh({\n            currentPage : true\n          });            \n          return this;\n        } else {\n          return this._currentPage;\n        }\n      },\n\n      totalPages : function(v) {\n        if (v !== undefined) {\n          this._totalPages = v;\n          this._refresh({\n            totalPages : true\n          });\n          return this;\n        } else {\n          return this._totalPages;\n        }\n      }\n  });\n\n  plugins.register(Pagination);\n\n\n  return panels.Pagination = Pagination;\n});\ndefine('skylark-domx-plugins-panels/TabStrip',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins-base\",\n    \"skylark-domx-plugins-popups/Dropdown\",\n    \"skylark-domx-plugins-toggles/TabButton\",\n    \"./panels\",\n], function(langx, browser, eventer, noder, geom,  $, plugins,Dropdown, TabButton,panels) {\n\n    var TabStrip = plugins.Plugin.inherit({\n        klassName : \"TabStrip\",\n        pluginName : \"domx.panels.tabstrip\",\n\n        options : {\n          selectors : {\n            header : \".nav-tabs\",\n            tab : \"[data-toggle=\\\"tab\\\"]\",\n            content : \".tab-content\",\n            tabpane : \".tab-pane\"\n          },\n\n          droptabs : {\n            selectors : {\n              dropdown : \"li.droptabs\",\n              dropdownMenu    : \"ul.dropdown-menu\",\n              dropdownTabs    : \"li\",\n              dropdownCaret   : \"b.caret\",\n              visibleTabs     : \">li:not(.dropdown)\",\n            },\n            auto              : true,\n            pullDropdownRight : true,\n\n\n          }\n        },\n\n     _construct : function(elm,options) {\n          this.overrided(elm,options);\n          this._velm = this.elmx();\n          this.$header = this._velm.$(this.options.selectors.header); \n          this.$tabs = this.$header.find(this.options.selectors.tab);\n          this.$content = this._velm.$(this.options.selectors.content);\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\n\n          this.$header.find('[data-toggle=\"dropdown\"]').plugin(Dropdown.prototype.pluginName);\n\n          var self = this;\n          this.$tabs.each(function(idx,tabEl){\n            $(tabEl).plugin(TabButton.prototype.pluginName, {\n              target : self.$tabpanes[idx]\n            });\n          });\n\n        },\n\n        arrange : function () {\n\n          var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\n              visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\n\n              $container = this.$header;\n          var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\n          var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\n          var dropdownLabel = $('>a', dropdown).clone();\n          var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\n\n          // We only want the default label, strip the caret out\n          $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\n\n          if (this.options.droptabs.pullDropdownRight) {\n            $(dropdown).addClass('pull-right');\n          }\n\n          var $dropdownTabs = function () {\n            return $(dropdownTabsSelector, dropdownMenu);\n          }\n\n          var $visibleTabs = function () {\n            return $(visibleTabsSelector, $container);\n          }\n\n          function getFirstHiddenElementWidth() {\n            var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\n            var hiddenElementWidth = $(tempElem).outerWidth();\n            $(tempElem).remove();\n            return hiddenElementWidth;\n          }\n\n          function getHiddenElementWidth(elem) {\n            var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\n            var hiddenElementWidth = $(tempElem).outerWidth();\n            $(tempElem).remove();\n            return hiddenElementWidth;\n          }\n\n          function getDropdownLabel() {\n            var labelText = 'Dropdown';\n            if ($(dropdown).hasClass('active')) {\n              labelText = $('>li.active>a', dropdownMenu).html();\n            } else if (dropdownLabel.html().length > 0) {\n              labelText = dropdownLabel.html();\n            }\n\n            labelText = $.trim(labelText);\n\n            if (labelText.length > 10) {\n              labelText = labelText.substring(0, 10) + '...';\n            }\n\n            return labelText;\n          }\n\n          function renderDropdownLabel() {\n            $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\n          }\n\n          function manageActive(elem) {\n            //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\n            $('a', $(elem)).on('show.bs.tab', function (e) {\n              $(e.relatedTarget).parent().removeClass('active');\n            })\n            $('a', $(elem)).on('shown.bs.tab', function (e) {\n              renderDropdownLabel();\n            })\n\n          }\n\n          function checkDropdownSelection() {\n            if ($($dropdownTabs()).filter('.active').length > 0) {\n              $(dropdown).addClass('active');\n            } else {\n              $(dropdown).removeClass('active');\n            }\n\n            renderDropdownLabel();\n          }\n\n\n          var visibleTabsWidth = function () {\n            var visibleTabsWidth = 0;\n            $($visibleTabs()).each(function( index ) {\n              visibleTabsWidth += parseInt($(this).outerWidth(), 10);\n            });\n            visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\n            return visibleTabsWidth;\n          }\n\n          var availableSpace = function () {\n            return $container.outerWidth()-visibleTabsWidth();\n          }\n\n          if (availableSpace()<0) {//we will hide tabs here\n            var x = availableSpace();\n            $($visibleTabs().get().reverse()).each(function( index ){\n              if (!($(this).hasClass('always-visible'))){\n                  $(this).prependTo(dropdownMenu);\n                  x=x+$(this).outerWidth();\n              }\n              if (x>=0) {return false;}\n            });\n          }\n\n          if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\n            var x = availableSpace();\n            $($dropdownTabs()).each(function( index ){\n              if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\n                $(this).appendTo($container);\n                x = x-$(this).outerWidth();\n              } else {return false;}\n             });\n\n            if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\n              // If not pulling-right, keep the dropdown at the end of the container.\n              $(dropdown).detach().insertAfter($container.find('li:last-child'));\n            }\n          }\n\n          if ($dropdownTabs().length <= 0) {\n            dropdown.hide();\n          } else {\n            dropdown.show();\n          }\n        },\n\n        add : function() {\n          //TODO\n        },\n\n        remove : function(){\n          //TODO\n        }\n    });\n\n    plugins.register(TabStrip);\n\n\n    return panels.TabStrip = TabStrip;\n\n});\ndefine('skylark-domx-plugins-panels/Toolbar',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\"\n],function(langx,$,plugins,panels){ \n\n\n  var Toolbar = plugins.Plugin.inherit({\n    klassName : \"Toolbar\",\n\n    pluginName : \"domx.panels.toolbar\",\n\n    options : {\n      toolbarFloat: true,\n      toolbarHidden: false,\n      toolbarFloatOffset: 0,\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\n      separator : {\n        template :  '<li><span class=\"separator\"></span></li>'\n      }\n    },\n\n    _construct : function(elm,options) {\n      this.overrided(elm,options);\n      this._velm = this.elmx();\n\n      var floatInitialized, initToolbarFloat, toolbarHeight;\n      //this.editor = editor;\n\n      //this.opts = langx.extend({}, this.opts, opts);\n      this.opts = this.options;\n\n\n      //if (!langx.isArray(this.opts.toolbar)) {\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\n      //}\n\n      this.wrapper = $(this._elm);\n      this.list = this.wrapper.find('ul');\n      this.list.on('click', function(e) {\n        return false;\n      });\n      this.wrapper.on('mousedown', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('.menu-on');\n        };\n      })(this));\n      $(document).on('mousedown.toolbar', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('menu-on');\n        };\n      })(this));\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\n        toolbarHeight = 0;\n        initToolbarFloat = (function(_this) {\n          return function() {\n            _this.wrapper.css('position', 'static');\n            _this.wrapper.width('auto');\n            _this.editor.editable.util.reflow(_this.wrapper);\n            _this.wrapper.width(_this.wrapper.outerWidth());\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\n            _this.wrapper.css('position', '');\n            toolbarHeight = _this.wrapper.outerHeight();\n            _this.editor.placeholderEl.css('top', toolbarHeight);\n            return true;\n          };\n        })(this);\n        floatInitialized = null;\n\n        /*\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\n          return floatInitialized = initToolbarFloat();\n        });\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\n          return function(e) {\n            var bottomEdge, scrollTop, topEdge;\n            if (!_this.wrapper.is(':visible')) {\n              return;\n            }\n            topEdge = _this.editor.wrapper.offset().top;\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\n              }\n            } else {\n              floatInitialized || (floatInitialized = initToolbarFloat());\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\n              }\n            }\n          };\n        })(this));\n        */\n      }\n\n      /*\n      this.editor.on('destroy', (function(_this) {\n        return function() {\n          return _this.buttons.length = 0;\n        };\n      })(this));\n      */\n\n      \n    },\n\n    addToolItem : function(itemWidget) {\n      $(itemWidget._elm).appendTo(this.list);\n      return this;\n    },\n\n    addSeparator : function() {\n      $(this.options.separator.template).appendTo(this.list);\n      return this;\n    }\n\n  });\n\n  plugins.register(Toolbar);\n\n  return panels.Toolbar = Toolbar;\n\n});\ndefine('skylark-domx-plugins-panels/Wizard',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\"\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\n\n\n\tvar Wizard = plugins.Plugin.inherit({\n\t\tklassName: \"Wizard\",\n\n\t    pluginName : \"domx.panels.wizard\",\n\n\t    options : {\n\t\t\tdisablePreviousStep: false,\n\t\t\tselectedItem: {\n\t\t\t\tstep: -1\n\t\t\t}//-1 means it will attempt to look for \"active\" class in order to set the step\n\t    },\n\n\t    _construct : function(elm,options) {\n\t\t    this.overrided(elm,options);\n\n\t\t\tthis.$element = this.$();\n\t\t\tthis.options.disablePreviousStep = (this.$element.attr('data-restrict') === 'previous') ? true : this.options.disablePreviousStep;\n\t\t\tthis.currentStep = this.options.selectedItem.step;\n\t\t\tthis.numSteps = this.$element.find('.steps li').length;\n\t\t\tthis.$prevBtn = this.$element.find('button.btn-prev');\n\t\t\tthis.$nextBtn = this.$element.find('button.btn-next');\n\n\t\t\tvar kids = this.$nextBtn.children().detach();\n\t\t\tthis.nextText = langx.trim(this.$nextBtn.text());\n\t\t\tthis.$nextBtn.append(kids);\n\n\t\t\tvar steps = this.$element.children('.steps-container');\n\t\t\t// maintains backwards compatibility with < 3.8, will be removed in the future\n\t\t\tif (steps.length === 0) {\n\t\t\t\tsteps = this.$element;\n\t\t\t\tthis.$element.addClass('no-steps-container');\n\t\t\t\tif (window && window.console && window.console.warn) {\n\t\t\t\t\twindow.console.warn('please update your wizard markup to include \".steps-container\" as seen in http://getfuelux.com/javascript.html#wizard-usage-markup');\n\t\t\t\t}\n\t\t\t}\n\t\t\tsteps = steps.find('.steps');\n\n\t\t\t// handle events\n\t\t\tthis.$prevBtn.on('click.fu.wizard', langx.proxy(this.previous, this));\n\t\t\tthis.$nextBtn.on('click.fu.wizard', langx.proxy(this.next, this));\n\t\t\tsteps.on('click.fu.wizard', 'li.complete', langx.proxy(this.stepclicked, this));\n\n\t\t\tthis.selectedItem(this.options.selectedItem);\n\n\t\t\tif (this.options.disablePreviousStep) {\n\t\t\t\tthis.$prevBtn.attr('disabled', true);\n\t\t\t\tthis.$element.find('.steps').addClass('previous-disabled');\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings [none]\n\t\t\t// empty elements to return to original markup [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\t//index is 1 based\n\t\t//second parameter can be array of objects [{ ... }, { ... }] or you can pass n additional objects as args\n\t\t//object structure is as follows (all params are optional): { badge: '', label: '', pane: '' }\n\t\taddSteps: function (index) {\n\t\t\tvar items = [].slice.call(arguments).slice(1);\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar i, l, $pane, $startPane, $startStep, $step;\n\n\t\t\tindex = (index === -1 || (index > (this.numSteps + 1))) ? this.numSteps + 1 : index;\n\t\t\tif (items[0] instanceof Array) {\n\t\t\t\titems = items[0];\n\t\t\t}\n\n\t\t\t$startStep = $steps.find('li:nth-child(' + index + ')');\n\t\t\t$startPane = $stepContent.find('.step-pane:nth-child(' + index + ')');\n\t\t\tif ($startStep.length < 1) {\n\t\t\t\t$startStep = null;\n\t\t\t}\n\n\t\t\tfor (i = 0, l = items.length; i < l; i++) {\n\t\t\t\t$step = $('<li data-step=\"' + index + '\"><span class=\"badge badge-info\"></span></li>');\n\t\t\t\t$step.append(items[i].label || '').append('<span class=\"chevron\"></span>');\n\t\t\t\t$step.find('.badge').append(items[i].badge || index);\n\n\t\t\t\t$pane = $('<div class=\"step-pane\" data-step=\"' + index + '\"></div>');\n\t\t\t\t$pane.append(items[i].pane || '');\n\n\t\t\t\tif (!$startStep) {\n\t\t\t\t\t$steps.append($step);\n\t\t\t\t\t$stepContent.append($pane);\n\t\t\t\t} else {\n\t\t\t\t\t$startStep.before($step);\n\t\t\t\t\t$startPane.before($pane);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis.syncSteps();\n\t\t\tthis.numSteps = $steps.find('li').length;\n\t\t\tthis.setState();\n\t\t},\n\n\t\t//index is 1 based, howMany is number to remove\n\t\tremoveSteps: function (index, howMany) {\n\t\t\tvar action = 'nextAll';\n\t\t\tvar i = 0;\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar $start;\n\n\t\t\thowMany = (howMany !== undefined) ? howMany : 1;\n\n\t\t\tif (index > $steps.find('li').length) {\n\t\t\t\t$start = $steps.find('li:last');\n\t\t\t} else {\n\t\t\t\t$start = $steps.find('li:nth-child(' + index + ')').prev();\n\t\t\t\tif ($start.length < 1) {\n\t\t\t\t\taction = 'children';\n\t\t\t\t\t$start = $steps;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$start[action]().each(function () {\n\t\t\t\tvar item = $(this);\n\t\t\t\tvar step = item.attr('data-step');\n\t\t\t\tif (i < howMany) {\n\t\t\t\t\titem.remove();\n\t\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:first').remove();\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t});\n\n\t\t\tthis.syncSteps();\n\t\t\tthis.numSteps = $steps.find('li').length;\n\t\t\tthis.setState();\n\t\t},\n\n\t\tsetState: function () {\n\t\t\tvar canMovePrev = (this.currentStep > 1);//remember, steps index is 1 based...\n\t\t\tvar isFirstStep = (this.currentStep === 1);\n\t\t\tvar isLastStep = (this.currentStep === this.numSteps);\n\n\t\t\t// disable buttons based on current step\n\t\t\tif (!this.options.disablePreviousStep) {\n\t\t\t\tthis.$prevBtn.attr('disabled', (isFirstStep === true || canMovePrev === false));\n\t\t\t}\n\n\t\t\t// change button text of last step, if specified\n\t\t\tvar last = this.$nextBtn.attr('data-last');\n\t\t\tif (last) {\n\t\t\t\tthis.lastText = last;\n\t\t\t\t// replace text\n\t\t\t\tvar text = this.nextText;\n\t\t\t\tif (isLastStep === true) {\n\t\t\t\t\ttext = this.lastText;\n\t\t\t\t\t// add status class to wizard\n\t\t\t\t\tthis.$element.addClass('complete');\n\t\t\t\t} else {\n\t\t\t\t\tthis.$element.removeClass('complete');\n\t\t\t\t}\n\n\t\t\t\tvar kids = this.$nextBtn.children().detach();\n\t\t\t\tthis.$nextBtn.text(text).append(kids);\n\t\t\t}\n\n\t\t\t// reset classes for all steps\n\t\t\tvar $steps = this.$element.find('.steps li');\n\t\t\t$steps.removeClass('active').removeClass('complete');\n\t\t\t$steps.find('span.badge').removeClass('badge-info').removeClass('badge-success');\n\n\t\t\t// set class for all previous steps\n\t\t\tvar prevSelector = '.steps li:lt(' + (this.currentStep - 1) + ')';\n\t\t\tvar $prevSteps = this.$element.find(prevSelector);\n\t\t\t$prevSteps.addClass('complete');\n\t\t\t$prevSteps.find('span.badge').addClass('badge-success');\n\n\t\t\t// set class for current step\n\t\t\tvar currentSelector = '.steps li:eq(' + (this.currentStep - 1) + ')';\n\t\t\tvar $currentStep = this.$element.find(currentSelector);\n\t\t\t$currentStep.addClass('active');\n\t\t\t$currentStep.find('span.badge').addClass('badge-info');\n\n\t\t\t// set display of target element\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar target = $currentStep.attr('data-step');\n\t\t\t$stepContent.find('.step-pane').removeClass('active');\n\t\t\t$stepContent.find('.step-pane[data-step=\"' + target + '\"]:first').addClass('active');\n\n\t\t\t// reset the wizard position to the left\n\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\n\n\t\t\t// check if the steps are wider than the container div\n\t\t\tvar totalWidth = 0;\n\t\t\tthis.$element.find('.steps > li').each(function () {\n\t\t\t\ttotalWidth += $(this).outerWidth();\n\t\t\t});\n\t\t\tvar containerWidth = 0;\n\t\t\tif (this.$element.find('.actions').length) {\n\t\t\t\tcontainerWidth = this.$element.width() - this.$element.find('.actions').first().outerWidth();\n\t\t\t} else {\n\t\t\t\tcontainerWidth = this.$element.width();\n\t\t\t}\n\n\t\t\tif (totalWidth > containerWidth) {\n\t\t\t\t// set the position so that the last step is on the right\n\t\t\t\tvar newMargin = totalWidth - containerWidth;\n\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\n\n\t\t\t\t// set the position so that the active step is in a good\n\t\t\t\t// position if it has been moved out of view\n\t\t\t\tif (this.$element.find('li.active').first().position().left < 200) {\n\t\t\t\t\tnewMargin += this.$element.find('li.active').first().position().left - 200;\n\t\t\t\t\tif (newMargin < 1) {\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only fire changed event after initializing\n\t\t\tif (typeof (this.initialized) !== 'undefined') {\n\t\t\t\tvar e = eventer.create('changed.fu.wizard');\n\t\t\t\tthis.$element.trigger(e, {\n\t\t\t\t\tstep: this.currentStep\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.initialized = true;\n\t\t},\n\n\t\tstepclicked: function (e) {\n\t\t\tvar li = $(e.currentTarget);\n\t\t\tvar index = this.$element.find('.steps li').index(li);\n\n\t\t\tif (index < this.currentStep && this.options.disablePreviousStep) {//enforce restrictions\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tvar evt = eventer.create('stepclicked.fu.wizard');\n\t\t\t\tthis.$element.trigger(evt, {\n\t\t\t\t\tstep: index + 1\n\t\t\t\t});\n\t\t\t\tif (evt.isDefaultPrevented()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.currentStep = (index + 1);\n\t\t\t\tthis.setState();\n\t\t\t}\n\t\t},\n\n\t\tsyncSteps: function () {\n\t\t\tvar i = 1;\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\n\t\t\t$steps.children().each(function () {\n\t\t\t\tvar item = $(this);\n\t\t\t\tvar badge = item.find('.badge');\n\t\t\t\tvar step = item.attr('data-step');\n\n\t\t\t\tif (!isNaN(parseInt(badge.html(), 10))) {\n\t\t\t\t\tbadge.html(i);\n\t\t\t\t}\n\n\t\t\t\titem.attr('data-step', i);\n\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:last').attr('data-step', i);\n\t\t\t\ti++;\n\t\t\t});\n\t\t},\n\n\t\tprevious: function () {\n\t\t\tif (this.options.disablePreviousStep || this.currentStep === 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\n\t\t\tthis.$element.trigger(e, {\n\t\t\t\tstep: this.currentStep,\n\t\t\t\tdirection: 'previous'\n\t\t\t});\n\t\t\tif (e.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}// don't increment ...what? Why?\n\n\t\t\tthis.currentStep -= 1;\n\t\t\tthis.setState();\n\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\n\t\t\tif (this.$prevBtn.is(':focus')) {\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\n\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\n\t\t\t\t\t$(firstFormField).focus();\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$prevBtn.is(':disabled')) {\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\n\t\t\t\t\tthis.$nextBtn.focus();\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\tnext: function () {\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\n\t\t\tthis.$element.trigger(e, {\n\t\t\t\tstep: this.currentStep,\n\t\t\t\tdirection: 'next'\n\t\t\t});\n\t\t\tif (e.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}// respect preventDefault in case dev has attached validation to step and wants to stop propagation based on it.\n\n\t\t\tif (this.currentStep < this.numSteps) {\n\t\t\t\tthis.currentStep += 1;\n\t\t\t\tthis.setState();\n\t\t\t} else {//is last step\n\t\t\t\tthis.$element.trigger('finished.fu.wizard');\n\t\t\t}\n\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\n\t\t\tif (this.$nextBtn.is(':focus')) {\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\n\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\n\t\t\t\t\t$(firstFormField).focus();\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$nextBtn.is(':disabled')) {\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\n\t\t\t\t\tthis.$prevBtn.focus();\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\tselectedItem: function (selectedItem) {\n\t\t\tvar retVal, step;\n\n\t\t\tif (selectedItem) {\n\t\t\t\tstep = selectedItem.step || -1;\n\t\t\t\t//allow selection of step by data-name\n\t\t\t\tstep = Number(this.$element.find('.steps li[data-name=\"' + step + '\"]').first().attr('data-step')) || Number(step);\n\n\t\t\t\tif (1 <= step && step <= this.numSteps) {\n\t\t\t\t\tthis.currentStep = step;\n\t\t\t\t\tthis.setState();\n\t\t\t\t} else {\n\t\t\t\t\tstep = this.$element.find('.steps li.active:first').attr('data-step');\n\t\t\t\t\tif (!isNaN(step)) {\n\t\t\t\t\t\tthis.currentStep = parseInt(step, 10);\n\t\t\t\t\t\tthis.setState();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tretVal = this;\n\t\t\t} else {\n\t\t\t\tretVal = {\n\t\t\t\t\tstep: this.currentStep\n\t\t\t\t};\n\t\t\t\tif (this.$element.find('.steps li.active:first[data-name]').length) {\n\t\t\t\t\tretVal.stepname = this.$element.find('.steps li.active:first').attr('data-name');\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn retVal;\n\t\t}\n\n\t});\n\n   plugins.register(Wizard);\n\n\treturn panels.Wizard = Wizard;\n\n});\n\ndefine('skylark-domx-plugins-panels/main',[\n    \"./panels\",\n    \"./Accordion\",\n    \"./Pagination\",\n    \"./Panel\",\n    \"./TabStrip\",\n    \"./Toolbar\",\n    \"./Wizard\"\n], function(panels) {\n    return panels;\n});\ndefine('skylark-domx-plugins-panels', ['skylark-domx-plugins-panels/main'], function (main) { return main; });\n\n"]}