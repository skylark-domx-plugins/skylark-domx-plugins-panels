{"version":3,"sources":["skylark-domx-panels.js"],"names":[],"mappingsfile":"../skylark-domx-panels.js","sourcesContent":["define('skylark-domx-panels/panels',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar panels = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(panels, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn skylark.attach(\"domx.panels\",panels);\r\n\r\n});\r\n\ndefine('skylark-domx-panels/Collapse',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./panels\"\n], function(langx, browser, eventer,  $, plugins, panels) {\n\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse =  plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"domx.collapse\",\n\n    options : {\n      toggle: true\n    },\n\n    _construct : function(elm,options) {\n      ////options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(elm,options);\n      this.$element      = this.$();\n      //this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + elm.id + '\"],' +\n      //                     '[data-toggle=\"collapse\"][data-target=\"#' + elm.id + '\"]')\n      this.transitioning = null\n\n      //if (this.options.parent) {\n      //  this.$parent = this.getParent()\n      //} else {\n      //  this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      //}\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width');\n      return hasWidth ? 'width' : 'height';\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) {\n        return;\n      }\n\n      //var activesData;\n      //var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      //if (actives && actives.length) {\n      //  activesData = actives.data('collapse')\n      //  if (activesData && activesData.transitioning) return\n      //}\n\n      var startEvent = eventer.create('show.collapse');\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      //if (actives && actives.length) {\n      //  //Plugin.call(actives, 'hide')\n      //  actives.plugin(\"domx.collapse\").hide();\n      //  activesData || actives.data('collapse', null)\n      //}\n\n      var dimension = this.dimension();\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      //this.$trigger\n      //  .removeClass('collapsed')\n      //  .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.collapse')\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'));\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) {\n        return ;\n      }\n\n      var startEvent = eventer.create('hide.collapse');\n      this.$element.trigger(startEvent);\n      if (startEvent.isDefaultPrevented()) {\n        return ;\n      } \n\n      var dimension = this.dimension();\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false);\n\n      //this.$trigger\n      //  .addClass('collapsed')\n      //  .attr('aria-expanded', false);\n\n      this.transitioning = 1;\n\n      var complete = function () {\n        this.transitioning = 0;\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.collapse');\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']();\n    }\n\n    /*\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in');\n\n      $element.attr('aria-expanded', isOpen);\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen);\n    }\n    */\n  });\n\n  Collapse.TRANSITION_DURATION = 350;\n\n  /*\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n  */\n\n  plugins.register(Collapse);\n\n  return panels.Collapse = Collapse;\n\n});\n\ndefine('skylark-domx-panels/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Collapse\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Collapse){\r\n\r\n  var Panel = plugins.Plugin.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"domx.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      this._expanded = false;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.panel',(e) => {\r\n        this.toggle();\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.emit(\"expanding\");\r\n      this.$body.plugin(\"domx.collapse\").show();\r\n      this._expanded = true;\r\n      this.emit(\"expanded\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.emit(\"collapsing\");\r\n      this.$body.plugin(\"domx.collapse\").hide();\r\n      this._expanded = false;\r\n      this.emit(\"collapsed\");\r\n    },\r\n\r\n    toggle : function() {\r\n      // toggle this panel\r\n      if (this._expanded) {\r\n        this.collapse();\r\n      } else {\r\n        this.expand();\r\n      }\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n    }\r\n\r\n\r\n  });\r\n\r\n  plugins.register(Panel);\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-domx-panels/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Collapse\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Collapse,Panel){\r\n\r\n  var Accordion = plugins.Plugin.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"domx.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n     _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\r\n        var panel = new Accordion.Panel(panelEl,{\r\n          accordion : this\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    expand : function() {\r\n      if (this.options.accordion.active) {\r\n        this.options.accordion.active.collapse();\r\n      }\r\n      this.overrided();\r\n      this.options.accordion.active = this;\r\n    },\r\n\r\n    collapse : function() {\r\n      this.overrided();\r\n      this.options.accordion.active = null;\r\n    },\r\n\r\n    toggle : function() {\r\n      this.overrided();\r\n    },\r\n\r\n    remove : function() {\r\n      this.overrided();\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Accordion);\r\n\r\n  return panels.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-domx-panels/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\r\n\r\n  'use strict';\r\n\r\n  var Pagination = plugins.Plugin.inherit({\r\n      klassName : \"Pagination\",\r\n\r\n      pluginName : \"domx.pagination\",\r\n\r\n      options : {\r\n          tagName : \"ul\",\r\n          css : \"\",\r\n          selectors : {\r\n              firstNavi : \"li[aria-label='first']\",\r\n              prevNavi : \"li[aria-label='prev']\",\r\n              nextNavi : \"li[aria-label='next']\",\r\n              lastNavi : \"li[aria-label='last']\",\r\n              numericNavi : \"li:not([aria-label])\",\r\n              numericTxt  : \"a\"\r\n          },\r\n          totalPages: 7,\r\n          maxButtonsVisible: 5,\r\n          currentPage: 1     \r\n      },\r\n\r\n      state : {\r\n          totalPages : Number,\r\n          currentPage : Number\r\n      },\r\n\r\n      _construct : function(elm,options) {\r\n        this.overrided(elm,options);\r\n        this._velm = this.elmx();\r\n\r\n        this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n        this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n        this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n        this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n        this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n        var self = this;\r\n\r\n        function checkCanAction(elm) {\r\n          var $elm = $(elm);\r\n          if ($elm.is(\".disabled,.active\")) {\r\n            return false;\r\n          } else {\r\n            return $elm;\r\n          }\r\n        }\r\n\r\n        this.$first.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(1);\r\n        });\r\n\r\n        this.$prev.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.currentPage()-1);\r\n        });\r\n\r\n        this.$last.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.totalPages());\r\n        });\r\n\r\n        this.$next.click(function(){\r\n          if (!checkCanAction(this)) {\r\n            return;\r\n          }\r\n          self.currentPage(self.currentPage()+1);\r\n        });\r\n\r\n        this.$numeric.click(function(){\r\n          var ret = checkCanAction(this)\r\n          if (!ret) {\r\n            return;\r\n          }\r\n          var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n              pageNo = parseInt(numeric);\r\n          self.currentPage(pageNo);\r\n\r\n        });\r\n\r\n        this._currentPage = this.options.currentPage;\r\n        this._totalPages = this.options.totalPages;\r\n\r\n        this._refresh({\r\n          currentPage : true,\r\n          totalPages : true\r\n        });\r\n      },\r\n\r\n      _refresh: function (updates) {\r\n        var self = this;\r\n\r\n        function changePageNoBtns(currentPage,totalPages) {\r\n\r\n          // Create the numeric buttons.\r\n          // Variable of number control in the buttons.\r\n          var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n          var begin = 1;\r\n          var end = begin + totalPageNoBtns - 1;\r\n\r\n          /*\r\n           * Align the values in the begin and end variables if the user has the\r\n           * possibility that select a page that doens't appear in the paginador.\r\n           * e.g currentPage = 1, and user go to the 20 page.\r\n           */\r\n          while ((currentPage < begin) || (currentPage > end)) {\r\n            if (currentPage > end) {\r\n               begin += totalPageNoBtns;\r\n               end += totalPageNoBtns;\r\n\r\n               if (end > totalPages) {\r\n                 begin = begin - (end - totalPages);\r\n                 end = totalPages;\r\n               }\r\n             } else {\r\n               begin -= totalPageNoBtns;\r\n               end -= totalPageNoBtns;\r\n\r\n               if (begin < 0) {\r\n                 end = end + (begin + totalPageNoBtns);\r\n                 begin = 1;\r\n               }\r\n             }\r\n          }\r\n         /*\r\n          * Verify if the user clicks in the last page show by paginator.\r\n          * If yes, the paginator advances.\r\n          */\r\n          if ((currentPage === end) && (totalPages != 1)) {\r\n            begin = currentPage - 1;\r\n            end = begin + totalPageNoBtns - 1;\r\n\r\n            if (end >= totalPages) {\r\n              begin = begin - (end - (totalPages));\r\n              end = totalPages;\r\n            }\r\n          }\r\n\r\n          /*\r\n           * Verify it the user clicks in the first page show by paginator.\r\n           * If yes, the paginator retrogress\r\n           */\r\n           if ((begin === currentPage) && (totalPages != 1)) {\r\n             if (currentPage != 1) {\r\n               end = currentPage + 1;\r\n               begin = end - (totalPageNoBtns - 1);\r\n             }\r\n           }\r\n\r\n           var count = self.$numeric.size(),\r\n               visibles = end-begin + 1,\r\n               i = 0;\r\n\r\n           self.$numeric.filter(\".active\").removeClass(\"active\");\r\n           while (i<visibles) {\r\n             var pageNo = i + begin,\r\n                 $btn = self.$numeric.eq(i);\r\n             $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n             if (pageNo == currentPage) {\r\n              $btn.addClass(\"active\");\r\n             }\r\n             i++;\r\n           }\r\n           while (i<count) {\r\n             self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n             i++;\r\n           }\r\n\r\n\r\n        }\r\n\r\n        function changeLabeldBtns(currentPage,totalPages) {\r\n          if (currentPage < 1) {\r\n            throw('Page can\\'t be less than 1');\r\n          } else if (currentPage > totalPages) {\r\n            throw('Page is bigger than total pages');\r\n          }\r\n\r\n          if (totalPages < 1) {\r\n            throw('Total Pages can\\'t be less than 1');\r\n          }\r\n\r\n          if (currentPage == 1 ) {\r\n            self.$first.addClass(\"disabled\");\r\n            self.$prev.addClass(\"disabled\");\r\n          } else {\r\n            self.$first.removeClass(\"disabled\");\r\n            self.$prev.removeClass(\"disabled\");\r\n          }\r\n\r\n          if (currentPage == totalPages ) {\r\n            self.$last.addClass(\"disabled\");\r\n            self.$next.addClass(\"disabled\");\r\n          } else {\r\n            self.$last.removeClass(\"disabled\");\r\n            self.$next.removeClass(\"disabled\");\r\n          }\r\n        }\r\n\r\n        if (updates.currentPage || updates.totalPages) {\r\n          var currentPage = self.currentPage(),\r\n              totalPages = self.totalPages();\r\n\r\n          changePageNoBtns(currentPage,totalPages);\r\n          changeLabeldBtns(currentPage,totalPages);\r\n        }\r\n\r\n      },\r\n\r\n      currentPage : function(v) {\r\n        if (v !== undefined) {\r\n          this._currentPage = v;\r\n          this._refresh({\r\n            currentPage : true\r\n          });            \r\n          return this;\r\n        } else {\r\n          return this._currentPage;\r\n        }\r\n      },\r\n\r\n      totalPages : function(v) {\r\n        if (v !== undefined) {\r\n          this._totalPages = v;\r\n          this._refresh({\r\n            totalPages : true\r\n          });\r\n          return this;\r\n        } else {\r\n          return this._totalPages;\r\n        }\r\n      }\r\n  });\r\n\r\n  plugins.register(Pagination);\r\n\r\n\r\n  return panels.Pagination = Pagination;\r\n});\ndefine('skylark-domx-panels/Tab',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./panels\"\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab =  plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"domx.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.bs.tab.data-api\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.TRANSITION_DURATION = 150\n\n\n  plugins.register(Tab);\n\n  return panels.Tab = Tab;\n});\n\ndefine('skylark-domx-panels/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins\",\r\n    \"skylark-domx-popups/Dropdown\",\r\n    \"./panels\",\r\n    \"./Tab\"\r\n], function(langx, browser, eventer, noder, geom,  $, plugins,Dropdown,panels, Tab) {\r\n\r\n    var TabStrip = plugins.Plugin.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"domx.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          },\r\n\r\n          droptabs : {\r\n            selectors : {\r\n              dropdown : \"li.droptabs\",\r\n              dropdownMenu    : \"ul.dropdown-menu\",\r\n              dropdownTabs    : \"li\",\r\n              dropdownCaret   : \"b.caret\",\r\n              visibleTabs     : \">li:not(.dropdown)\",\r\n            },\r\n            auto              : true,\r\n            pullDropdownRight : true,\r\n\r\n\r\n          }\r\n        },\r\n\r\n     _construct : function(elm,options) {\r\n          this.overrided(elm,options);\r\n          this._velm = this.elmx();\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').plugin(Dropdown.prototype.pluginName);\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).plugin(Tab.prototype.pluginName, {\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        arrange : function () {\r\n\r\n          var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\r\n              visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\r\n\r\n              $container = this.$header;\r\n          var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\r\n          var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\r\n          var dropdownLabel = $('>a', dropdown).clone();\r\n          var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\r\n\r\n          // We only want the default label, strip the caret out\r\n          $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\r\n\r\n          if (this.options.droptabs.pullDropdownRight) {\r\n            $(dropdown).addClass('pull-right');\r\n          }\r\n\r\n          var $dropdownTabs = function () {\r\n            return $(dropdownTabsSelector, dropdownMenu);\r\n          }\r\n\r\n          var $visibleTabs = function () {\r\n            return $(visibleTabsSelector, $container);\r\n          }\r\n\r\n          function getFirstHiddenElementWidth() {\r\n            var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getHiddenElementWidth(elem) {\r\n            var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getDropdownLabel() {\r\n            var labelText = 'Dropdown';\r\n            if ($(dropdown).hasClass('active')) {\r\n              labelText = $('>li.active>a', dropdownMenu).html();\r\n            } else if (dropdownLabel.html().length > 0) {\r\n              labelText = dropdownLabel.html();\r\n            }\r\n\r\n            labelText = $.trim(labelText);\r\n\r\n            if (labelText.length > 10) {\r\n              labelText = labelText.substring(0, 10) + '...';\r\n            }\r\n\r\n            return labelText;\r\n          }\r\n\r\n          function renderDropdownLabel() {\r\n            $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\r\n          }\r\n\r\n          function manageActive(elem) {\r\n            //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\r\n            $('a', $(elem)).on('show.bs.tab', function (e) {\r\n              $(e.relatedTarget).parent().removeClass('active');\r\n            })\r\n            $('a', $(elem)).on('shown.bs.tab', function (e) {\r\n              renderDropdownLabel();\r\n            })\r\n\r\n          }\r\n\r\n          function checkDropdownSelection() {\r\n            if ($($dropdownTabs()).filter('.active').length > 0) {\r\n              $(dropdown).addClass('active');\r\n            } else {\r\n              $(dropdown).removeClass('active');\r\n            }\r\n\r\n            renderDropdownLabel();\r\n          }\r\n\r\n\r\n          var visibleTabsWidth = function () {\r\n            var visibleTabsWidth = 0;\r\n            $($visibleTabs()).each(function( index ) {\r\n              visibleTabsWidth += parseInt($(this).outerWidth(), 10);\r\n            });\r\n            visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\r\n            return visibleTabsWidth;\r\n          }\r\n\r\n          var availableSpace = function () {\r\n            return $container.outerWidth()-visibleTabsWidth();\r\n          }\r\n\r\n          if (availableSpace()<0) {//we will hide tabs here\r\n            var x = availableSpace();\r\n            $($visibleTabs().get().reverse()).each(function( index ){\r\n              if (!($(this).hasClass('always-visible'))){\r\n                  $(this).prependTo(dropdownMenu);\r\n                  x=x+$(this).outerWidth();\r\n              }\r\n              if (x>=0) {return false;}\r\n            });\r\n          }\r\n\r\n          if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\r\n            var x = availableSpace();\r\n            $($dropdownTabs()).each(function( index ){\r\n              if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\r\n                $(this).appendTo($container);\r\n                x = x-$(this).outerWidth();\r\n              } else {return false;}\r\n             });\r\n\r\n            if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\r\n              // If not pulling-right, keep the dropdown at the end of the container.\r\n              $(dropdown).detach().insertAfter($container.find('li:last-child'));\r\n            }\r\n          }\r\n\r\n          if ($dropdownTabs().length <= 0) {\r\n            dropdown.hide();\r\n          } else {\r\n            dropdown.show();\r\n          }\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n    plugins.register(TabStrip);\r\n\r\n\r\n    return panels.TabStrip = TabStrip;\r\n\r\n});\ndefine('skylark-domx-panels/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,$,plugins,panels){ \r\n\r\n\r\n  var Toolbar = plugins.Plugin.inherit({\r\n    klassName : \"Toolbar\",\r\n\r\n    pluginName : \"domx.toolbar\",\r\n\r\n    options : {\r\n      toolbarFloat: true,\r\n      toolbarHidden: false,\r\n      toolbarFloatOffset: 0,\r\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\r\n      separator : {\r\n        template :  '<li><span class=\"separator\"></span></li>'\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      //this.editor = editor;\r\n\r\n      //this.opts = langx.extend({}, this.opts, opts);\r\n      this.opts = this.options;\r\n\r\n\r\n      //if (!langx.isArray(this.opts.toolbar)) {\r\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      //}\r\n\r\n      this.wrapper = $(this._elm);\r\n      this.list = this.wrapper.find('ul');\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.toolbar', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.editable.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n\r\n        /*\r\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        */\r\n      }\r\n\r\n      /*\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      */\r\n\r\n      \r\n    },\r\n\r\n    addToolItem : function(itemWidget) {\r\n      $(itemWidget._elm).appendTo(this.list);\r\n      return this;\r\n    },\r\n\r\n    addSeparator : function() {\r\n      $(this.options.separator.template).appendTo(this.list);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Toolbar);\r\n\r\n  return panels.Toolbar = Toolbar;\r\n\r\n});\ndefine('skylark-domx-panels/Wizard',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels){\r\n\r\n\r\n\tvar Wizard = plugins.Plugin.inherit({\r\n\t\tklassName: \"Wizard\",\r\n\r\n\t    pluginName : \"domx.wizard\",\r\n\r\n\t    options : {\r\n\t\t\tdisablePreviousStep: false,\r\n\t\t\tselectedItem: {\r\n\t\t\t\tstep: -1\r\n\t\t\t}//-1 means it will attempt to look for \"active\" class in order to set the step\r\n\t    },\r\n\r\n\t    _construct : function(elm,options) {\r\n\t\t    this.overrided(elm,options);\r\n\r\n\t\t\tthis.$element = this.$();\r\n\t\t\tthis.options.disablePreviousStep = (this.$element.attr('data-restrict') === 'previous') ? true : this.options.disablePreviousStep;\r\n\t\t\tthis.currentStep = this.options.selectedItem.step;\r\n\t\t\tthis.numSteps = this.$element.find('.steps li').length;\r\n\t\t\tthis.$prevBtn = this.$element.find('button.btn-prev');\r\n\t\t\tthis.$nextBtn = this.$element.find('button.btn-next');\r\n\r\n\t\t\tvar kids = this.$nextBtn.children().detach();\r\n\t\t\tthis.nextText = langx.trim(this.$nextBtn.text());\r\n\t\t\tthis.$nextBtn.append(kids);\r\n\r\n\t\t\tvar steps = this.$element.children('.steps-container');\r\n\t\t\t// maintains backwards compatibility with < 3.8, will be removed in the future\r\n\t\t\tif (steps.length === 0) {\r\n\t\t\t\tsteps = this.$element;\r\n\t\t\t\tthis.$element.addClass('no-steps-container');\r\n\t\t\t\tif (window && window.console && window.console.warn) {\r\n\t\t\t\t\twindow.console.warn('please update your wizard markup to include \".steps-container\" as seen in http://getfuelux.com/javascript.html#wizard-usage-markup');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsteps = steps.find('.steps');\r\n\r\n\t\t\t// handle events\r\n\t\t\tthis.$prevBtn.on('click.fu.wizard', langx.proxy(this.previous, this));\r\n\t\t\tthis.$nextBtn.on('click.fu.wizard', langx.proxy(this.next, this));\r\n\t\t\tsteps.on('click.fu.wizard', 'li.complete', langx.proxy(this.stepclicked, this));\r\n\r\n\t\t\tthis.selectedItem(this.options.selectedItem);\r\n\r\n\t\t\tif (this.options.disablePreviousStep) {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', true);\r\n\t\t\t\tthis.$element.find('.steps').addClass('previous-disabled');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// any external bindings [none]\r\n\t\t\t// empty elements to return to original markup [none]\r\n\t\t\t// returns string of markup\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\t//index is 1 based\r\n\t\t//second parameter can be array of objects [{ ... }, { ... }] or you can pass n additional objects as args\r\n\t\t//object structure is as follows (all params are optional): { badge: '', label: '', pane: '' }\r\n\t\taddSteps: function (index) {\r\n\t\t\tvar items = [].slice.call(arguments).slice(1);\r\n\t\t\tvar $steps = this.$element.find('.steps');\r\n\t\t\tvar $stepContent = this.$element.find('.step-content');\r\n\t\t\tvar i, l, $pane, $startPane, $startStep, $step;\r\n\r\n\t\t\tindex = (index === -1 || (index > (this.numSteps + 1))) ? this.numSteps + 1 : index;\r\n\t\t\tif (items[0] instanceof Array) {\r\n\t\t\t\titems = items[0];\r\n\t\t\t}\r\n\r\n\t\t\t$startStep = $steps.find('li:nth-child(' + index + ')');\r\n\t\t\t$startPane = $stepContent.find('.step-pane:nth-child(' + index + ')');\r\n\t\t\tif ($startStep.length < 1) {\r\n\t\t\t\t$startStep = null;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0, l = items.length; i < l; i++) {\r\n\t\t\t\t$step = $('<li data-step=\"' + index + '\"><span class=\"badge badge-info\"></span></li>');\r\n\t\t\t\t$step.append(items[i].label || '').append('<span class=\"chevron\"></span>');\r\n\t\t\t\t$step.find('.badge').append(items[i].badge || index);\r\n\r\n\t\t\t\t$pane = $('<div class=\"step-pane\" data-step=\"' + index + '\"></div>');\r\n\t\t\t\t$pane.append(items[i].pane || '');\r\n\r\n\t\t\t\tif (!$startStep) {\r\n\t\t\t\t\t$steps.append($step);\r\n\t\t\t\t\t$stepContent.append($pane);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$startStep.before($step);\r\n\t\t\t\t\t$startPane.before($pane);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncSteps();\r\n\t\t\tthis.numSteps = $steps.find('li').length;\r\n\t\t\tthis.setState();\r\n\t\t},\r\n\r\n\t\t//index is 1 based, howMany is number to remove\r\n\t\tremoveSteps: function (index, howMany) {\r\n\t\t\tvar action = 'nextAll';\r\n\t\t\tvar i = 0;\r\n\t\t\tvar $steps = this.$element.find('.steps');\r\n\t\t\tvar $stepContent = this.$element.find('.step-content');\r\n\t\t\tvar $start;\r\n\r\n\t\t\thowMany = (howMany !== undefined) ? howMany : 1;\r\n\r\n\t\t\tif (index > $steps.find('li').length) {\r\n\t\t\t\t$start = $steps.find('li:last');\r\n\t\t\t} else {\r\n\t\t\t\t$start = $steps.find('li:nth-child(' + index + ')').prev();\r\n\t\t\t\tif ($start.length < 1) {\r\n\t\t\t\t\taction = 'children';\r\n\t\t\t\t\t$start = $steps;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t$start[action]().each(function () {\r\n\t\t\t\tvar item = $(this);\r\n\t\t\t\tvar step = item.attr('data-step');\r\n\t\t\t\tif (i < howMany) {\r\n\t\t\t\t\titem.remove();\r\n\t\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:first').remove();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\r\n\t\t\tthis.syncSteps();\r\n\t\t\tthis.numSteps = $steps.find('li').length;\r\n\t\t\tthis.setState();\r\n\t\t},\r\n\r\n\t\tsetState: function () {\r\n\t\t\tvar canMovePrev = (this.currentStep > 1);//remember, steps index is 1 based...\r\n\t\t\tvar isFirstStep = (this.currentStep === 1);\r\n\t\t\tvar isLastStep = (this.currentStep === this.numSteps);\r\n\r\n\t\t\t// disable buttons based on current step\r\n\t\t\tif (!this.options.disablePreviousStep) {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', (isFirstStep === true || canMovePrev === false));\r\n\t\t\t}\r\n\r\n\t\t\t// change button text of last step, if specified\r\n\t\t\tvar last = this.$nextBtn.attr('data-last');\r\n\t\t\tif (last) {\r\n\t\t\t\tthis.lastText = last;\r\n\t\t\t\t// replace text\r\n\t\t\t\tvar text = this.nextText;\r\n\t\t\t\tif (isLastStep === true) {\r\n\t\t\t\t\ttext = this.lastText;\r\n\t\t\t\t\t// add status class to wizard\r\n\t\t\t\t\tthis.$element.addClass('complete');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$element.removeClass('complete');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar kids = this.$nextBtn.children().detach();\r\n\t\t\t\tthis.$nextBtn.text(text).append(kids);\r\n\t\t\t}\r\n\r\n\t\t\t// reset classes for all steps\r\n\t\t\tvar $steps = this.$element.find('.steps li');\r\n\t\t\t$steps.removeClass('active').removeClass('complete');\r\n\t\t\t$steps.find('span.badge').removeClass('badge-info').removeClass('badge-success');\r\n\r\n\t\t\t// set class for all previous steps\r\n\t\t\tvar prevSelector = '.steps li:lt(' + (this.currentStep - 1) + ')';\r\n\t\t\tvar $prevSteps = this.$element.find(prevSelector);\r\n\t\t\t$prevSteps.addClass('complete');\r\n\t\t\t$prevSteps.find('span.badge').addClass('badge-success');\r\n\r\n\t\t\t// set class for current step\r\n\t\t\tvar currentSelector = '.steps li:eq(' + (this.currentStep - 1) + ')';\r\n\t\t\tvar $currentStep = this.$element.find(currentSelector);\r\n\t\t\t$currentStep.addClass('active');\r\n\t\t\t$currentStep.find('span.badge').addClass('badge-info');\r\n\r\n\t\t\t// set display of target element\r\n\t\t\tvar $stepContent = this.$element.find('.step-content');\r\n\t\t\tvar target = $currentStep.attr('data-step');\r\n\t\t\t$stepContent.find('.step-pane').removeClass('active');\r\n\t\t\t$stepContent.find('.step-pane[data-step=\"' + target + '\"]:first').addClass('active');\r\n\r\n\t\t\t// reset the wizard position to the left\r\n\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\r\n\r\n\t\t\t// check if the steps are wider than the container div\r\n\t\t\tvar totalWidth = 0;\r\n\t\t\tthis.$element.find('.steps > li').each(function () {\r\n\t\t\t\ttotalWidth += $(this).outerWidth();\r\n\t\t\t});\r\n\t\t\tvar containerWidth = 0;\r\n\t\t\tif (this.$element.find('.actions').length) {\r\n\t\t\t\tcontainerWidth = this.$element.width() - this.$element.find('.actions').first().outerWidth();\r\n\t\t\t} else {\r\n\t\t\t\tcontainerWidth = this.$element.width();\r\n\t\t\t}\r\n\r\n\t\t\tif (totalWidth > containerWidth) {\r\n\t\t\t\t// set the position so that the last step is on the right\r\n\t\t\t\tvar newMargin = totalWidth - containerWidth;\r\n\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\r\n\r\n\t\t\t\t// set the position so that the active step is in a good\r\n\t\t\t\t// position if it has been moved out of view\r\n\t\t\t\tif (this.$element.find('li.active').first().position().left < 200) {\r\n\t\t\t\t\tnewMargin += this.$element.find('li.active').first().position().left - 200;\r\n\t\t\t\t\tif (newMargin < 1) {\r\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// only fire changed event after initializing\r\n\t\t\tif (typeof (this.initialized) !== 'undefined') {\r\n\t\t\t\tvar e = eventer.create('changed.fu.wizard');\r\n\t\t\t\tthis.$element.trigger(e, {\r\n\t\t\t\t\tstep: this.currentStep\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.initialized = true;\r\n\t\t},\r\n\r\n\t\tstepclicked: function (e) {\r\n\t\t\tvar li = $(e.currentTarget);\r\n\t\t\tvar index = this.$element.find('.steps li').index(li);\r\n\r\n\t\t\tif (index < this.currentStep && this.options.disablePreviousStep) {//enforce restrictions\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tvar evt = eventer.create('stepclicked.fu.wizard');\r\n\t\t\t\tthis.$element.trigger(evt, {\r\n\t\t\t\t\tstep: index + 1\r\n\t\t\t\t});\r\n\t\t\t\tif (evt.isDefaultPrevented()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.currentStep = (index + 1);\r\n\t\t\t\tthis.setState();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncSteps: function () {\r\n\t\t\tvar i = 1;\r\n\t\t\tvar $steps = this.$element.find('.steps');\r\n\t\t\tvar $stepContent = this.$element.find('.step-content');\r\n\r\n\t\t\t$steps.children().each(function () {\r\n\t\t\t\tvar item = $(this);\r\n\t\t\t\tvar badge = item.find('.badge');\r\n\t\t\t\tvar step = item.attr('data-step');\r\n\r\n\t\t\t\tif (!isNaN(parseInt(badge.html(), 10))) {\r\n\t\t\t\t\tbadge.html(i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\titem.attr('data-step', i);\r\n\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:last').attr('data-step', i);\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tprevious: function () {\r\n\t\t\tif (this.options.disablePreviousStep || this.currentStep === 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\r\n\t\t\tthis.$element.trigger(e, {\r\n\t\t\t\tstep: this.currentStep,\r\n\t\t\t\tdirection: 'previous'\r\n\t\t\t});\r\n\t\t\tif (e.isDefaultPrevented()) {\r\n\t\t\t\treturn;\r\n\t\t\t}// don't increment ...what? Why?\r\n\r\n\t\t\tthis.currentStep -= 1;\r\n\t\t\tthis.setState();\r\n\r\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\r\n\t\t\tif (this.$prevBtn.is(':focus')) {\r\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\r\n\r\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\r\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\r\n\t\t\t\t\t$(firstFormField).focus();\r\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tnext: function () {\r\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\r\n\t\t\tthis.$element.trigger(e, {\r\n\t\t\t\tstep: this.currentStep,\r\n\t\t\t\tdirection: 'next'\r\n\t\t\t});\r\n\t\t\tif (e.isDefaultPrevented()) {\r\n\t\t\t\treturn;\r\n\t\t\t}// respect preventDefault in case dev has attached validation to step and wants to stop propagation based on it.\r\n\r\n\t\t\tif (this.currentStep < this.numSteps) {\r\n\t\t\t\tthis.currentStep += 1;\r\n\t\t\t\tthis.setState();\r\n\t\t\t} else {//is last step\r\n\t\t\t\tthis.$element.trigger('finished.fu.wizard');\r\n\t\t\t}\r\n\r\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\r\n\t\t\tif (this.$nextBtn.is(':focus')) {\r\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\r\n\r\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\r\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\r\n\t\t\t\t\t$(firstFormField).focus();\r\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectedItem: function (selectedItem) {\r\n\t\t\tvar retVal, step;\r\n\r\n\t\t\tif (selectedItem) {\r\n\t\t\t\tstep = selectedItem.step || -1;\r\n\t\t\t\t//allow selection of step by data-name\r\n\t\t\t\tstep = Number(this.$element.find('.steps li[data-name=\"' + step + '\"]').first().attr('data-step')) || Number(step);\r\n\r\n\t\t\t\tif (1 <= step && step <= this.numSteps) {\r\n\t\t\t\t\tthis.currentStep = step;\r\n\t\t\t\t\tthis.setState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstep = this.$element.find('.steps li.active:first').attr('data-step');\r\n\t\t\t\t\tif (!isNaN(step)) {\r\n\t\t\t\t\t\tthis.currentStep = parseInt(step, 10);\r\n\t\t\t\t\t\tthis.setState();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tretVal = this;\r\n\t\t\t} else {\r\n\t\t\t\tretVal = {\r\n\t\t\t\t\tstep: this.currentStep\r\n\t\t\t\t};\r\n\t\t\t\tif (this.$element.find('.steps li.active:first[data-name]').length) {\r\n\t\t\t\t\tretVal.stepname = this.$element.find('.steps li.active:first').attr('data-name');\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn retVal;\r\n\t\t}\r\n\r\n\t});\r\n\r\n   plugins.register(Wizard);\r\n\r\n\treturn panels.Wizard = Wizard;\r\n\r\n});\r\n\ndefine('skylark-domx-panels/main',[\r\n    \"./panels\",\r\n    \"./Accordion\",\r\n    \"./Pagination\",\r\n    \"./TabStrip\",\r\n    \"./Toolbar\",\r\n    \"./Wizard\"\r\n], function(panels) {\r\n    return panels;\r\n});\ndefine('skylark-domx-panels', ['skylark-domx-panels/main'], function (main) { return main; });\n\n"]}