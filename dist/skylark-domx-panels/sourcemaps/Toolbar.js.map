{"version":3,"sources":["Toolbar.js"],"names":["define","langx","$","plugins","panels","Toolbar","Plugin","inherit","klassName","pluginName","options","toolbarFloat","toolbarHidden","toolbarFloatOffset","template","separator","_construct","elm","toolbarHeight","_this","this","overrided","_velm","elmx","opts","wrapper","_elm","list","find","on","e","removeClass","document","css","width","editor","editable","util","reflow","outerWidth","os","mobile","position","left","offset","outerHeight","placeholderEl","addToolItem","itemWidget","appendTo","addSeparator","register"],"mappings":";;;;;;;AAAAA,QACE,sBACA,qBACA,uBACA,YACA,SAASC,EAAMC,EAAEC,EAAQC,GAGzB,IAAIC,EAAUF,EAAQG,OAAOC,SAC3BC,UAAY,UAEZC,WAAa,sBAEbC,SACEC,cAAc,EACdC,eAAe,EACfC,mBAAoB,EACpBC,SAAW,4CACXC,WACED,SAAY,6CAIhBE,WAAa,SAASC,EAAIP,GAIxB,IAAwCQ,EAgBDC,EAnBvCC,KAAKC,UAAUJ,EAAIP,GACnBU,KAAKE,MAAQF,KAAKG,OAMlBH,KAAKI,KAAOJ,KAAKV,QAOjBU,KAAKK,QAAUvB,EAAEkB,KAAKM,MACtBN,KAAKO,KAAOP,KAAKK,QAAQG,KAAK,MAC9BR,KAAKO,KAAKE,GAAG,QAAS,SAASC,GAC7B,OAAO,IAETV,KAAKK,QAAQI,GAAG,aAAuBV,EAIpCC,KAHM,SAASU,GACd,OAAOX,EAAMQ,KAAKC,KAAK,YAAYG,YAAY,eAGnD7B,EAAE8B,UAAUH,GAAG,oBAAqB,SAAUV,GAC5C,OAAO,SAASW,GACd,OAAOX,EAAMQ,KAAKC,KAAK,YAAYG,YAAY,YAFf,CAIjCX,QACEA,KAAKI,KAAKZ,eAAiBQ,KAAKI,KAAKb,eACxCS,KAAKK,QAAQQ,IAAI,MAAOb,KAAKI,KAAKX,oBAClCK,EAAgB,EACG,SAAUC,GAC3B,OAAO,WASL,OARAA,EAAMM,QAAQQ,IAAI,WAAY,UAC9Bd,EAAMM,QAAQS,MAAM,QACpBf,EAAMgB,OAAOC,SAASC,KAAKC,OAAOnB,EAAMM,SACxCN,EAAMM,QAAQS,MAAMf,EAAMM,QAAQc,cAClCpB,EAAMM,QAAQQ,IAAI,OAAQd,EAAMgB,OAAOC,SAASC,KAAKG,GAAGC,OAAStB,EAAMM,QAAQiB,WAAWC,KAAOxB,EAAMM,QAAQmB,SAASD,MACxHxB,EAAMM,QAAQQ,IAAI,WAAY,IAC9Bf,EAAgBC,EAAMM,QAAQoB,cAC9B1B,EAAMgB,OAAOW,cAAcb,IAAI,MAAOf,IAC/B,GAVQ,CAYhBE,QA4CP2B,YAAc,SAASC,GAErB,OADA9C,EAAE8C,EAAWtB,MAAMuB,SAAS7B,KAAKO,MAC1BP,MAGT8B,aAAe,WAEb,OADAhD,EAAEkB,KAAKV,QAAQK,UAAUD,UAAUmC,SAAS7B,KAAKO,MAC1CP,QAOX,OAFAjB,EAAQgD,SAAS9C,GAEVD,EAAOC,QAAUA","file":"../Toolbar.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\"\r\n],function(langx,$,plugins,panels){ \r\n\r\n\r\n  var Toolbar = plugins.Plugin.inherit({\r\n    klassName : \"Toolbar\",\r\n\r\n    pluginName : \"domx.panels.toolbar\",\r\n\r\n    options : {\r\n      toolbarFloat: true,\r\n      toolbarHidden: false,\r\n      toolbarFloatOffset: 0,\r\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\r\n      separator : {\r\n        template :  '<li><span class=\"separator\"></span></li>'\r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      //this.editor = editor;\r\n\r\n      //this.opts = langx.extend({}, this.opts, opts);\r\n      this.opts = this.options;\r\n\r\n\r\n      //if (!langx.isArray(this.opts.toolbar)) {\r\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      //}\r\n\r\n      this.wrapper = $(this._elm);\r\n      this.list = this.wrapper.find('ul');\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.toolbar', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.editable.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n\r\n        /*\r\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        */\r\n      }\r\n\r\n      /*\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      */\r\n\r\n      \r\n    },\r\n\r\n    addToolItem : function(itemWidget) {\r\n      $(itemWidget._elm).appendTo(this.list);\r\n      return this;\r\n    },\r\n\r\n    addSeparator : function() {\r\n      $(this.options.separator.template).appendTo(this.list);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Toolbar);\r\n\r\n  return panels.Toolbar = Toolbar;\r\n\r\n});"]}