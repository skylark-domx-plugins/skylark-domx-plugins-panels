{"version":3,"sources":["Accordion.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","panels","Collapse","Panel","Accordion","Plugin","inherit","klassName","pluginName","options","panel","selector","template","_construct","elm","this","overrided","_velm","elmx","forEach","panelEl","accordion","push","_panels","_post","_refresh","updates","get","addPanel","remove","expand","expandAll","collapse","collapseAll","active","toggle","register"],"mappings":";;;;;;;AAAAA,QACE,sBACA,uBACA,uBACA,qBACA,oBACA,qBACA,uBACA,WACA,aACA,WACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAEC,EAAQC,EAAOC,EAASC,GAEpE,IAAIC,EAAYJ,EAAQK,OAAOC,SAC7BC,UAAY,YAEZC,WAAa,iBAEbC,SACEC,OACEC,SAAW,WACXC,SAAW,OAIdC,WAAa,SAASC,EAAIL,GACzBM,KAAKC,UAAUF,EAAIL,GACnBM,KAAKE,MAAQF,KAAKG,OAClB,IAAIjB,KACJc,KAAKE,MAAMlB,EAAEgB,KAAKN,QAAQC,MAAMC,UAAUQ,QAASC,IACjD,IAAIV,EAAQ,IAAIN,EAAUD,MAAMiB,GAC9BC,UAAYN,OAEdd,EAAOqB,KAAKZ,KAEdK,KAAKQ,QAAUtB,GAGjBuB,MAAQ,aAIRC,SAAW,SAASC,KAGpBzB,QACE0B,IAAM,cAMRC,SAAW,aAUXC,OAAS,aAUTC,OAAS,aAWTC,UAAY,aAWZC,SAAW,aAUXC,YAAc,eAiChB,OA5BA7B,EAAUD,MAAQA,EAAMG,SACtBC,UAAY,iBAEZuB,OAAS,WACHf,KAAKN,QAAQY,UAAUa,QACzBnB,KAAKN,QAAQY,UAAUa,OAAOF,WAEhCjB,KAAKC,YACLD,KAAKN,QAAQY,UAAUa,OAASnB,MAGlCiB,SAAW,WACTjB,KAAKC,YACLD,KAAKN,QAAQY,UAAUa,OAAS,MAGlCC,OAAS,WACPpB,KAAKC,aAGPa,OAAS,WACPd,KAAKC,eAKThB,EAAQoC,SAAShC,GAEVH,EAAOG,UAAYA","file":"../Accordion.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Collapse\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Collapse,Panel){\r\n\r\n  var Accordion = plugins.Plugin.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"domx.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n     _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\r\n        var panel = new Accordion.Panel(panelEl,{\r\n          accordion : this\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    expand : function() {\r\n      if (this.options.accordion.active) {\r\n        this.options.accordion.active.collapse();\r\n      }\r\n      this.overrided();\r\n      this.options.accordion.active = this;\r\n    },\r\n\r\n    collapse : function() {\r\n      this.overrided();\r\n      this.options.accordion.active = null;\r\n    },\r\n\r\n    toggle : function() {\r\n      this.overrided();\r\n    },\r\n\r\n    remove : function() {\r\n      this.overrided();\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Accordion);\r\n\r\n  return panels.Accordion = Accordion;\r\n});\r\n"]}