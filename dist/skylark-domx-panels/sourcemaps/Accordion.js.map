{"version":3,"sources":["Accordion.js"],"names":["define","langx","$","elmx","plugins","panels","Panel","Accordion","Plugin","inherit","klassName","pluginName","options","panel","selector","template","_construct","elm","this","overrided","_velm","forEach","panelEl","group","push","_panels","get","addPanel","remove","expand","expandAll","collapse","collapseAll","active","toggle","register"],"mappings":";;;;;;;AAACA,QACC,sBACA,qBACA,oBACA,uBACA,WACA,WACA,SAASC,EAAMC,EAAEC,EAAKC,EAAQC,EAAOC,GAErC,IAAIC,EAAYH,EAAQI,OAAOC,SAC7BC,UAAY,YAEZC,WAAa,wBAEbC,SACEC,OACEC,SAAW,WACXC,SAAW,OAIdC,WAAa,SAASC,EAAIL,GACzBM,KAAKC,UAAUF,EAAIL,GACnBM,KAAKE,MAAQF,KAAKf,OAClB,IAAIE,KACJa,KAAKE,MAAMlB,EAAEgB,KAAKN,QAAQC,MAAMC,UAAUO,QAASC,IACjD,IAAIT,EAAQ,IAAIN,EAAUD,MAAMgB,GAC9BC,MAAQL,OAEVb,EAAOmB,KAAKX,KAEdK,KAAKO,QAAUpB,GAGjBA,QACEqB,IAAM,cAMRC,SAAW,aAUXC,OAAS,aAUTC,OAAS,aAWTC,UAAY,aAWZC,SAAW,aAUXC,YAAc,eAiChB,OA5BAzB,EAAUD,MAAQA,EAAMG,SACtBC,UAAY,iBAEZmB,OAAS,WACHX,KAAKN,QAAQW,MAAMU,QACrBf,KAAKN,QAAQW,MAAMU,OAAOF,WAE5Bb,KAAKC,YACLD,KAAKN,QAAQW,MAAMU,OAASf,MAG9Ba,SAAW,WACTb,KAAKC,YACLD,KAAKN,QAAQW,MAAMU,OAAS,MAG9BC,OAAS,WACPhB,KAAKC,aAGPS,OAAS,WACPV,KAAKC,eAKTf,EAAQ+B,SAAS5B,GAEVF,EAAOE,UAAYA","file":"../Accordion.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./panels\",\r\n  \"./Panel\"\r\n],function(langx,$,elmx,plugins,panels,Panel){\r\n\r\n  var Accordion = plugins.Plugin.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"domx.panels.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n     _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\r\n        var panel = new Accordion.Panel(panelEl,{\r\n          group : this\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a group pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a group pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all group panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a group pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all group pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    expand : function() {\r\n      if (this.options.group.active) {\r\n        this.options.group.active.collapse();\r\n      }\r\n      this.overrided();\r\n      this.options.group.active = this;\r\n    },\r\n\r\n    collapse : function() {\r\n      this.overrided();\r\n      this.options.group.active = null;\r\n    },\r\n\r\n    toggle : function() {\r\n      this.overrided();\r\n    },\r\n\r\n    remove : function() {\r\n      this.overrided();\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Accordion);\r\n\r\n  return panels.Accordion = Accordion;\r\n});\r\n"]}